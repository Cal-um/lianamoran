{"ast":null,"code":"import \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport AccessibilityUtil from '../AccessibilityUtil';\nimport css from '../../exports/StyleSheet/css';\nimport StyleSheet from '../../exports/StyleSheet';\nimport styleResolver from '../../exports/StyleSheet/styleResolver';\nimport { STYLE_GROUPS } from '../../exports/StyleSheet/constants';\nvar emptyObject = {};\nvar classes = css.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, STYLE_GROUPS.classicReset);\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar defaultStyleResolver = function defaultStyleResolver(style, classList) {\n  return styleResolver.resolve(style, classList);\n};\n\nvar createDOMProps = function createDOMProps(component, props, styleResolver) {\n  if (!styleResolver) {\n    styleResolver = defaultStyleResolver;\n  }\n\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityStates = _props.accessibilityStates,\n      classList = _props.classList,\n      deprecatedClassName = _props.className,\n      importantForAccessibility = _props.importantForAccessibility,\n      nativeID = _props.nativeID,\n      placeholderTextColor = _props.placeholderTextColor,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessible = _props.accessible,\n      accessibilityComponentType = _props.accessibilityComponentType,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityTraits = _props.accessibilityTraits,\n      domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityLabel\", \"accessibilityLiveRegion\", \"accessibilityStates\", \"classList\", \"className\", \"importantForAccessibility\", \"nativeID\", \"placeholderTextColor\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityComponentType\", \"accessibilityRole\", \"accessibilityTraits\"]);\n\n  var disabled = AccessibilityUtil.isDisabled(props);\n  var role = AccessibilityUtil.propsToAriaRole(props);\n\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n\n  if (accessibilityLabel && accessibilityLabel.constructor === String) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLiveRegion && accessibilityLiveRegion.constructor === String) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (Array.isArray(accessibilityStates)) {\n    for (var i = 0; i < accessibilityStates.length; i += 1) {\n      domProps[\"aria-\" + accessibilityStates[i]] = true;\n    }\n  }\n\n  if (role && role.constructor === String) {\n    domProps.role = role;\n  }\n\n  if (disabled) {\n    domProps['aria-disabled'] = disabled;\n    domProps.disabled = disabled;\n  }\n\n  var focusable = !disabled && importantForAccessibility !== 'no' && importantForAccessibility !== 'no-hide-descendants';\n\n  if (role === 'link' || component === 'a' || component === 'button' || component === 'input' || component === 'select' || component === 'textarea') {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (AccessibilityUtil.buttonLikeRoles[role] || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  }\n\n  var reactNativeStyle = StyleSheet.compose(pointerEvents && pointerEventsStyles[pointerEvents], StyleSheet.compose(providedStyle, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  }));\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = component === 'a' || component === 'button' || component === 'li' || component === 'ul' || role === 'heading';\n  var finalClassList = [deprecatedClassName, needsReset && classes.reset, needsCursor && classes.cursor, classList];\n\n  var _styleResolver = styleResolver(reactNativeStyle, finalClassList),\n      className = _styleResolver.className,\n      style = _styleResolver.style;\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  }\n\n  if (nativeID && nativeID.constructor === String) {\n    domProps.id = nativeID;\n  }\n\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = (domProps.rel || '') + \" noopener noreferrer\";\n  }\n\n  if (testID && testID.constructor === String) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/modules/createDOMProps/index.js"],"names":["source","target","sourceKeys","Object","i","key","excluded","emptyObject","classes","reset","backgroundColor","color","font","listStyle","margin","textAlign","textDecoration","cursor","STYLE_GROUPS","pointerEventsStyles","auto","pointerEvents","none","defaultStyleResolver","styleResolver","createDOMProps","props","_props","accessibilityLabel","accessibilityLiveRegion","accessibilityStates","classList","deprecatedClassName","importantForAccessibility","nativeID","placeholderTextColor","providedStyle","testID","accessible","accessibilityComponentType","accessibilityRole","accessibilityTraits","domProps","_objectWithoutPropertiesLoose","disabled","AccessibilityUtil","role","Array","focusable","component","reactNativeStyle","needsCursor","needsReset","finalClassList","_styleResolver","className","style"],"mappings":";;;;;;;AAAA,SAAA,6BAAA,CAAA,MAAA,EAAA,QAAA,EAAyD;AAAE,MAAIA,MAAM,IAAV,IAAA,EAAoB,OAAA,EAAA;AAAW,MAAIC,MAAM,GAAV,EAAA;AAAiB,MAAIC,UAAU,GAAGC,MAAM,CAANA,IAAAA,CAAjB,MAAiBA,CAAjB;AAAsC,MAAA,GAAA,EAAA,CAAA;;AAAY,OAAKC,CAAC,GAAN,CAAA,EAAYA,CAAC,GAAGF,UAAU,CAA1B,MAAA,EAAmCE,CAAnC,EAAA,EAAwC;AAAEC,IAAAA,GAAG,GAAGH,UAAU,CAAhBG,CAAgB,CAAhBA;AAAqB,QAAIC,QAAQ,CAARA,OAAAA,CAAAA,GAAAA,KAAJ,CAAA,EAAgC;AAAUL,IAAAA,MAAM,CAANA,GAAM,CAANA,GAAcD,MAAM,CAApBC,GAAoB,CAApBA;AAA4B;;AAAC,SAAA,MAAA;AAAgB;;AAUnT,OAAA,iBAAA,MAAA,sBAAA;AACA,OAAA,GAAA,MAAA,8BAAA;AACA,OAAA,UAAA,MAAA,0BAAA;AACA,OAAA,aAAA,MAAA,wCAAA;AACA,SAAA,YAAA,QAAA,oCAAA;AACA,IAAIM,WAAW,GAAf,EAAA;AAEA,IAAIC,OAAO,GAAG,GAAG,CAAH,MAAA,CAAW;AACvBC,EAAAA,KAAK,EAAE;AACLC,IAAAA,eAAe,EADV,aAAA;AAELC,IAAAA,KAAK,EAFA,SAAA;AAGLC,IAAAA,IAAI,EAHC,SAAA;AAILC,IAAAA,SAAS,EAJJ,MAAA;AAKLC,IAAAA,MAAM,EALD,CAAA;AAMLC,IAAAA,SAAS,EANJ,SAAA;AAOLC,IAAAA,cAAc,EAAE;AAPX,GADgB;AAUvBC,EAAAA,MAAM,EAAE;AACNA,IAAAA,MAAM,EAAE;AADF;AAVe,CAAX,EAaXC,YAAY,CAbf,YAAc,CAAd;AAcA,IAAIC,mBAAmB,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC1CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,aAAa,EAAE;AADX,GADoC;AAI1C,cAAY;AACVA,IAAAA,aAAa,EAAE;AADL,GAJ8B;AAO1C,cAAY;AACVA,IAAAA,aAAa,EAAE;AADL,GAP8B;AAU1CC,EAAAA,IAAI,EAAE;AACJD,IAAAA,aAAa,EAAE;AADX;AAVoC,CAAlB,CAA1B;;AAeA,IAAIE,oBAAoB,GAAG,SAAA,oBAAA,CAAA,KAAA,EAAA,SAAA,EAAgD;AACzE,SAAOC,aAAa,CAAbA,OAAAA,CAAAA,KAAAA,EAAP,SAAOA,CAAP;AADF,CAAA;;AAIA,IAAIC,cAAc,GAAG,SAAA,cAAA,CAAA,SAAA,EAAA,KAAA,EAAA,aAAA,EAAyD;AAC5E,MAAI,CAAJ,aAAA,EAAoB;AAClBD,IAAAA,aAAa,GAAbA,oBAAAA;AACD;;AAED,MAAI,CAAJ,KAAA,EAAY;AACVE,IAAAA,KAAK,GAALA,WAAAA;AACD;;AAED,MAAIC,MAAM,GAAV,KAAA;AAAA,MACIC,kBAAkB,GAAGD,MAAM,CAD/B,kBAAA;AAAA,MAEIE,uBAAuB,GAAGF,MAAM,CAFpC,uBAAA;AAAA,MAGIG,mBAAmB,GAAGH,MAAM,CAHhC,mBAAA;AAAA,MAIII,SAAS,GAAGJ,MAAM,CAJtB,SAAA;AAAA,MAKIK,mBAAmB,GAAGL,MAAM,CALhC,SAAA;AAAA,MAMIM,yBAAyB,GAAGN,MAAM,CANtC,yBAAA;AAAA,MAOIO,QAAQ,GAAGP,MAAM,CAPrB,QAAA;AAAA,MAQIQ,oBAAoB,GAAGR,MAAM,CARjC,oBAAA;AAAA,MASIN,aAAa,GAAGM,MAAM,CAT1B,aAAA;AAAA,MAUIS,aAAa,GAAGT,MAAM,CAV1B,KAAA;AAAA,MAWIU,MAAM,GAAGV,MAAM,CAXnB,MAAA;AAAA,MAYIW,UAAU,GAAGX,MAAM,CAZvB,UAAA;AAAA,MAaIY,0BAA0B,GAAGZ,MAAM,CAbvC,0BAAA;AAAA,MAcIa,iBAAiB,GAAGb,MAAM,CAd9B,iBAAA;AAAA,MAeIc,mBAAmB,GAAGd,MAAM,CAfhC,mBAAA;AAAA,MAgBIe,QAAQ,GAAGC,6BAA6B,CAAA,MAAA,EAAS,CAAA,oBAAA,EAAA,yBAAA,EAAA,qBAAA,EAAA,WAAA,EAAA,WAAA,EAAA,2BAAA,EAAA,UAAA,EAAA,sBAAA,EAAA,eAAA,EAAA,OAAA,EAAA,QAAA,EAAA,YAAA,EAAA,4BAAA,EAAA,mBAAA,EAhBrD,qBAgBqD,CAAT,CAhB5C;;AAkBA,MAAIC,QAAQ,GAAGC,iBAAiB,CAAjBA,UAAAA,CAAf,KAAeA,CAAf;AACA,MAAIC,IAAI,GAAGD,iBAAiB,CAAjBA,eAAAA,CA5BiE,KA4BjEA,CAAX;;AAEA,MAAIZ,yBAAyB,KAA7B,qBAAA,EAAyD;AACvDS,IAAAA,QAAQ,CAARA,aAAQ,CAARA,GAAAA,IAAAA;AACD;;AAED,MAAId,kBAAkB,IAAIA,kBAAkB,CAAlBA,WAAAA,KAA1B,MAAA,EAAqE;AACnEc,IAAAA,QAAQ,CAARA,YAAQ,CAARA,GAAAA,kBAAAA;AACD;;AAED,MAAIb,uBAAuB,IAAIA,uBAAuB,CAAvBA,WAAAA,KAA/B,MAAA,EAA+E;AAC7Ea,IAAAA,QAAQ,CAARA,WAAQ,CAARA,GAAwBb,uBAAuB,KAAvBA,MAAAA,GAAAA,KAAAA,GAAxBa,uBAAAA;AACD;;AAED,MAAIK,KAAK,CAALA,OAAAA,CAAJ,mBAAIA,CAAJ,EAAwC;AACtC,SAAK,IAAI3C,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAG0B,mBAAmB,CAAvC,MAAA,EAAgD1B,CAAC,IAAjD,CAAA,EAAwD;AACtDsC,MAAAA,QAAQ,CAAC,UAAUZ,mBAAmB,CAAtCY,CAAsC,CAA9B,CAARA,GAAAA,IAAAA;AACD;AACF;;AAED,MAAII,IAAI,IAAIA,IAAI,CAAJA,WAAAA,KAAZ,MAAA,EAAyC;AACvCJ,IAAAA,QAAQ,CAARA,IAAAA,GAAAA,IAAAA;AAjD0E;;AAqD5E,MAAA,QAAA,EAAc;AACZA,IAAAA,QAAQ,CAARA,eAAQ,CAARA,GAAAA,QAAAA;AACAA,IAAAA,QAAQ,CAARA,QAAAA,GAAAA,QAAAA;AAvD0E;;AA6D5E,MAAIM,SAAS,GAAG,CAAA,QAAA,IAAaf,yBAAyB,KAAtC,IAAA,IAAmDA,yBAAyB,KAA5F,qBAAA;;AAEA,MAAIa,IAAI,KAAJA,MAAAA,IAAmBG,SAAS,KAA5BH,GAAAA,IAAwCG,SAAS,KAAjDH,QAAAA,IAAkEG,SAAS,KAA3EH,OAAAA,IAA2FG,SAAS,KAApGH,QAAAA,IAAqHG,SAAS,KAAlI,UAAA,EAAmJ;AACjJ,QAAIX,UAAU,KAAVA,KAAAA,IAAwB,CAA5B,SAAA,EAAwC;AACtCI,MAAAA,QAAQ,CAARA,QAAAA,GAAAA,IAAAA;AADF,KAAA,MAEO;AACLA,MAAAA,QAAQ,CAARA,gBAAQ,CAARA,GAAAA,IAAAA;AACD;AALH,GAAA,MAMO,IAAIG,iBAAiB,CAAjBA,eAAAA,CAAAA,IAAAA,KAA2CC,IAAI,KAAnD,SAAA,EAAmE;AACxE,QAAIR,UAAU,KAAVA,KAAAA,IAAJ,SAAA,EAAuC;AACrCI,MAAAA,QAAQ,CAARA,gBAAQ,CAARA,GAAAA,IAAAA;AACAA,MAAAA,QAAQ,CAARA,QAAAA,GAAAA,GAAAA;AACD;AAJI,GAAA,MAKA;AACL,QAAIJ,UAAU,KAAVA,IAAAA,IAAJ,SAAA,EAAsC;AACpCI,MAAAA,QAAQ,CAARA,gBAAQ,CAARA,GAAAA,IAAAA;AACAA,MAAAA,QAAQ,CAARA,QAAAA,GAAAA,GAAAA;AACD;AA9EyE;;AAkF5E,MAAIQ,gBAAgB,GAAG,UAAU,CAAV,OAAA,CAAmB7B,aAAa,IAAIF,mBAAmB,CAAvD,aAAuD,CAAvD,EAAwE,UAAU,CAAV,OAAA,CAAA,aAAA,EAAkCgB,oBAAoB,IAAI;AACvJA,IAAAA,oBAAoB,EAAEA;AADiI,GAA1D,CAAxE,CAAvB;AAIA,MAAIgB,WAAW,GAAG,CAACL,IAAI,KAAJA,QAAAA,IAAqBA,IAAI,KAA1B,MAAA,KAA0C,CAA5D,QAAA;AACA,MAAIM,UAAU,GAAGH,SAAS,KAATA,GAAAA,IAAqBA,SAAS,KAA9BA,QAAAA,IAA+CA,SAAS,KAAxDA,IAAAA,IAAqEA,SAAS,KAA9EA,IAAAA,IAA2FH,IAAI,KAvFpC,SAuF5E;AAEA,MAAIO,cAAc,GAAG,CAAA,mBAAA,EAAsBD,UAAU,IAAI5C,OAAO,CAA3C,KAAA,EAAmD2C,WAAW,IAAI3C,OAAO,CAAzE,MAAA,EAzFuD,SAyFvD,CAArB;;AAEA,MAAI8C,cAAc,GAAG9B,aAAa,CAAA,gBAAA,EAAlC,cAAkC,CAAlC;AAAA,MACI+B,SAAS,GAAGD,cAAc,CAD9B,SAAA;AAAA,MAEIE,KAAK,GAAGF,cAAc,CAF1B,KAAA;;AAIA,MAAIC,SAAS,IAATA,IAAAA,IAAqBA,SAAS,KAAlC,EAAA,EAA2C;AACzCb,IAAAA,QAAQ,CAARA,SAAAA,GAAAA,SAAAA;AACD;;AAED,MAAA,KAAA,EAAW;AACTA,IAAAA,QAAQ,CAARA,KAAAA,GAAAA,KAAAA;AApG0E;;AAyG5E,MAAIR,QAAQ,IAAIA,QAAQ,CAARA,WAAAA,KAAhB,MAAA,EAAiD;AAC/CQ,IAAAA,QAAQ,CAARA,EAAAA,GAAAA,QAAAA;AA1G0E;;AAiH5E,MAAIO,SAAS,KAATA,GAAAA,IAAqBP,QAAQ,CAARA,MAAAA,KAAzB,QAAA,EAAuD;AACrDA,IAAAA,QAAQ,CAARA,GAAAA,GAAe,CAACA,QAAQ,CAARA,GAAAA,IAAD,EAAA,IAAfA,sBAAAA;AAlH0E;;AAsH5E,MAAIL,MAAM,IAAIA,MAAM,CAANA,WAAAA,KAAd,MAAA,EAA6C;AAC3CK,IAAAA,QAAQ,CAARA,aAAQ,CAARA,GAAAA,MAAAA;AACD;;AAED,SAAA,QAAA;AA1HF,CAAA;;AA6HA,eAAA,cAAA","sourcesContent":["function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport AccessibilityUtil from '../AccessibilityUtil';\nimport css from '../../exports/StyleSheet/css';\nimport StyleSheet from '../../exports/StyleSheet';\nimport styleResolver from '../../exports/StyleSheet/styleResolver';\nimport { STYLE_GROUPS } from '../../exports/StyleSheet/constants';\nvar emptyObject = {}; // Reset styles for heading, link, and list DOM elements\n\nvar classes = css.create({\n  reset: {\n    backgroundColor: 'transparent',\n    color: 'inherit',\n    font: 'inherit',\n    listStyle: 'none',\n    margin: 0,\n    textAlign: 'inherit',\n    textDecoration: 'none'\n  },\n  cursor: {\n    cursor: 'pointer'\n  }\n}, STYLE_GROUPS.classicReset);\nvar pointerEventsStyles = StyleSheet.create({\n  auto: {\n    pointerEvents: 'auto'\n  },\n  'box-none': {\n    pointerEvents: 'box-none'\n  },\n  'box-only': {\n    pointerEvents: 'box-only'\n  },\n  none: {\n    pointerEvents: 'none'\n  }\n});\n\nvar defaultStyleResolver = function defaultStyleResolver(style, classList) {\n  return styleResolver.resolve(style, classList);\n};\n\nvar createDOMProps = function createDOMProps(component, props, styleResolver) {\n  if (!styleResolver) {\n    styleResolver = defaultStyleResolver;\n  }\n\n  if (!props) {\n    props = emptyObject;\n  }\n\n  var _props = props,\n      accessibilityLabel = _props.accessibilityLabel,\n      accessibilityLiveRegion = _props.accessibilityLiveRegion,\n      accessibilityStates = _props.accessibilityStates,\n      classList = _props.classList,\n      deprecatedClassName = _props.className,\n      importantForAccessibility = _props.importantForAccessibility,\n      nativeID = _props.nativeID,\n      placeholderTextColor = _props.placeholderTextColor,\n      pointerEvents = _props.pointerEvents,\n      providedStyle = _props.style,\n      testID = _props.testID,\n      accessible = _props.accessible,\n      accessibilityComponentType = _props.accessibilityComponentType,\n      accessibilityRole = _props.accessibilityRole,\n      accessibilityTraits = _props.accessibilityTraits,\n      domProps = _objectWithoutPropertiesLoose(_props, [\"accessibilityLabel\", \"accessibilityLiveRegion\", \"accessibilityStates\", \"classList\", \"className\", \"importantForAccessibility\", \"nativeID\", \"placeholderTextColor\", \"pointerEvents\", \"style\", \"testID\", \"accessible\", \"accessibilityComponentType\", \"accessibilityRole\", \"accessibilityTraits\"]);\n\n  var disabled = AccessibilityUtil.isDisabled(props);\n  var role = AccessibilityUtil.propsToAriaRole(props); // GENERAL ACCESSIBILITY\n\n  if (importantForAccessibility === 'no-hide-descendants') {\n    domProps['aria-hidden'] = true;\n  }\n\n  if (accessibilityLabel && accessibilityLabel.constructor === String) {\n    domProps['aria-label'] = accessibilityLabel;\n  }\n\n  if (accessibilityLiveRegion && accessibilityLiveRegion.constructor === String) {\n    domProps['aria-live'] = accessibilityLiveRegion === 'none' ? 'off' : accessibilityLiveRegion;\n  }\n\n  if (Array.isArray(accessibilityStates)) {\n    for (var i = 0; i < accessibilityStates.length; i += 1) {\n      domProps[\"aria-\" + accessibilityStates[i]] = true;\n    }\n  }\n\n  if (role && role.constructor === String) {\n    domProps.role = role;\n  } // DISABLED\n\n\n  if (disabled) {\n    domProps['aria-disabled'] = disabled;\n    domProps.disabled = disabled;\n  } // FOCUS\n  // Assume that 'link' is focusable by default (uses <a>).\n  // Assume that 'button' is not (uses <div role='button'>) but must be treated as such.\n\n\n  var focusable = !disabled && importantForAccessibility !== 'no' && importantForAccessibility !== 'no-hide-descendants';\n\n  if (role === 'link' || component === 'a' || component === 'button' || component === 'input' || component === 'select' || component === 'textarea') {\n    if (accessible === false || !focusable) {\n      domProps.tabIndex = '-1';\n    } else {\n      domProps['data-focusable'] = true;\n    }\n  } else if (AccessibilityUtil.buttonLikeRoles[role] || role === 'textbox') {\n    if (accessible !== false && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } else {\n    if (accessible === true && focusable) {\n      domProps['data-focusable'] = true;\n      domProps.tabIndex = '0';\n    }\n  } // STYLE\n\n\n  var reactNativeStyle = StyleSheet.compose(pointerEvents && pointerEventsStyles[pointerEvents], StyleSheet.compose(providedStyle, placeholderTextColor && {\n    placeholderTextColor: placeholderTextColor\n  })); // Additional style resets for interactive elements\n\n  var needsCursor = (role === 'button' || role === 'link') && !disabled;\n  var needsReset = component === 'a' || component === 'button' || component === 'li' || component === 'ul' || role === 'heading'; // Classic CSS styles\n\n  var finalClassList = [deprecatedClassName, needsReset && classes.reset, needsCursor && classes.cursor, classList]; // Resolve styles\n\n  var _styleResolver = styleResolver(reactNativeStyle, finalClassList),\n      className = _styleResolver.className,\n      style = _styleResolver.style;\n\n  if (className != null && className !== '') {\n    domProps.className = className;\n  }\n\n  if (style) {\n    domProps.style = style;\n  } // OTHER\n  // Native element ID\n\n\n  if (nativeID && nativeID.constructor === String) {\n    domProps.id = nativeID;\n  } // Link security\n  // https://mathiasbynens.github.io/rel-noopener/\n  // Note: using \"noreferrer\" doesn't impact referrer tracking for https\n  // transfers (i.e., from https to https).\n\n\n  if (component === 'a' && domProps.target === '_blank') {\n    domProps.rel = (domProps.rel || '') + \" noopener noreferrer\";\n  } // Automated test IDs\n\n\n  if (testID && testID.constructor === String) {\n    domProps['data-testid'] = testID;\n  }\n\n  return domProps;\n};\n\nexport default createDOMProps;"]},"metadata":{},"sourceType":"module"}