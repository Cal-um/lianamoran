{"ast":null,"code":"import \"core-js/modules/es6.function.bind\";\nimport normalizeColor from '../../modules/normalizeColor';\n\nvar colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {\n  var color = props[propName];\n\n  if (color === undefined || color === null) {\n    if (isRequired) {\n      return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');\n    }\n\n    return;\n  }\n\n  if (typeof color === 'number') {\n    return;\n  }\n\n  if (normalizeColor(color) === null) {\n    return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\\n' + \"Valid color formats are\\n  - '#f0f' (#rgb)\\n  - '#f0fc' (#rgba)\\n  - '#ff00ff' (#rrggbb)\\n  - '#ff00ff00' (#rrggbbaa)\\n  - 'rgb(255, 255, 255)'\\n  - 'rgba(255, 255, 255, 1.0)'\\n  - 'hsl(360, 100%, 100%)'\\n  - 'hsla(360, 100%, 100%, 1.0)'\\n  - 'transparent'\\n  - 'red'\\n  - 0xff00ff00 (0xrrggbbaa)\\n\");\n  }\n};\n\nvar ColorPropType;\n\nif (process.env.NODE_ENV !== 'production') {\n  ColorPropType = colorPropType.bind(null, false);\n  ColorPropType.isRequired = colorPropType.bind(null, true);\n} else {\n  ColorPropType = function ColorPropType() {};\n}\n\nexport default ColorPropType;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/exports/ColorPropType/index.js"],"names":["colorPropType","color","props","propFullName","normalizeColor","process","ColorPropType"],"mappings":";AASA,OAAA,cAAA,MAAA,8BAAA;;AAEA,IAAIA,aAAa,GAAG,SAAA,aAAA,CAAA,UAAA,EAAA,KAAA,EAAA,QAAA,EAAA,aAAA,EAAA,QAAA,EAAA,YAAA,EAA2F;AAC7G,MAAIC,KAAK,GAAGC,KAAK,CAAjB,QAAiB,CAAjB;;AAEA,MAAID,KAAK,KAALA,SAAAA,IAAuBA,KAAK,KAAhC,IAAA,EAA2C;AACzC,QAAA,UAAA,EAAgB;AACd,aAAO,IAAA,KAAA,CAAU,cAAA,QAAA,GAAA,IAAA,IAAiCE,YAAY,IAA7C,QAAA,IAAA,0BAAA,GAAA,aAAA,GAAjB,IAAO,CAAP;AACD;;AAED;AACD;;AAED,MAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;AAI7B;AACD;;AAED,MAAIC,cAAc,CAAdA,KAAc,CAAdA,KAAJ,IAAA,EAAoC;AAClC,WAAO,IAAA,KAAA,CAAU,aAAA,QAAA,GAAA,IAAA,IAAgCD,YAAY,IAA5C,QAAA,IAAA,iBAAA,GAAA,aAAA,GAAA,KAAA,GAAA,KAAA,GAAA,IAAA,GAAjB,4SAAO,CAAP;AACD;AApBH,CAAA;;AAuBA,IAAA,aAAA;;AAEA,IAAIE,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AACzCC,EAAAA,aAAa,GAAG,aAAa,CAAb,IAAA,CAAA,IAAA,EAAyB,KAAzB,CAAhBA;AAGAA,EAAAA,aAAa,CAAbA,UAAAA,GAA2B,aAAa,CAAb,IAAA,CAAA,IAAA,EAAyB,IAAzB,CAA3BA;AAJF,CAAA,MAOO;AACLA,EAAAA,aAAa,GAAG,SAAA,aAAA,GAAyB,CAAzCA,CAAAA;AACD;;AAED,eAAA,aAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport normalizeColor from '../../modules/normalizeColor';\n\nvar colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {\n  var color = props[propName];\n\n  if (color === undefined || color === null) {\n    if (isRequired) {\n      return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');\n    }\n\n    return;\n  }\n\n  if (typeof color === 'number') {\n    // Developers should not use a number, but we are using the prop type\n    // both for user provided colors and for transformed ones. This isn't ideal\n    // and should be fixed but will do for now...\n    return;\n  }\n\n  if (normalizeColor(color) === null) {\n    return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\\n' + \"Valid color formats are\\n  - '#f0f' (#rgb)\\n  - '#f0fc' (#rgba)\\n  - '#ff00ff' (#rrggbb)\\n  - '#ff00ff00' (#rrggbbaa)\\n  - 'rgb(255, 255, 255)'\\n  - 'rgba(255, 255, 255, 1.0)'\\n  - 'hsl(360, 100%, 100%)'\\n  - 'hsla(360, 100%, 100%, 1.0)'\\n  - 'transparent'\\n  - 'red'\\n  - 0xff00ff00 (0xrrggbbaa)\\n\");\n  }\n};\n\nvar ColorPropType;\n\nif (process.env.NODE_ENV !== 'production') {\n  ColorPropType = colorPropType.bind(null, false\n  /* isRequired */\n  );\n  ColorPropType.isRequired = colorPropType.bind(null, true\n  /* isRequired */\n  );\n} else {\n  ColorPropType = function ColorPropType() {};\n}\n\nexport default ColorPropType;"]},"metadata":{},"sourceType":"module"}