{"ast":null,"code":"import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.map\";\nimport ReactNativePropRegistry from '../../modules/ReactNativePropRegistry';\nimport flattenStyle from './flattenStyle';\nvar absoluteFillObject = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\nvar absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);\nvar StyleSheet = {\n  absoluteFill: absoluteFill,\n  absoluteFillObject: absoluteFillObject,\n  compose: function compose(style1, style2) {\n    if (process.env.NODE_ENV !== 'production') {\n      var len = arguments.length;\n\n      if (len > 2) {\n        var readableStyles = Array.prototype.slice.call(arguments).map(function (a) {\n          return flattenStyle(a);\n        });\n        throw new Error(\"StyleSheet.compose() only accepts 2 arguments, received \" + len + \": \" + JSON.stringify(readableStyles));\n      }\n    }\n\n    if (style1 && style2) {\n      return [style1, style2];\n    } else {\n      return style1 || style2;\n    }\n  },\n  create: function create(styles) {\n    var result = {};\n    Object.keys(styles).forEach(function (key) {\n      if (process.env.NODE_ENV !== 'production') {\n        var validate = require('./validate');\n\n        var interopValidate = validate[\"default\"] ? validate[\"default\"] : validate;\n        interopValidate(key, styles);\n      }\n\n      var id = styles[key] && ReactNativePropRegistry.register(styles[key]);\n      result[key] = id;\n    });\n    return result;\n  },\n  flatten: flattenStyle,\n  hairlineWidth: 1\n};\nexport default StyleSheet;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/exports/StyleSheet/StyleSheet.js"],"names":["absoluteFillObject","position","left","right","top","bottom","absoluteFill","ReactNativePropRegistry","StyleSheet","compose","process","len","arguments","readableStyles","flattenStyle","JSON","style1","create","result","Object","validate","require","interopValidate","id","styles","flatten","hairlineWidth"],"mappings":";;;;;;AAQA,OAAA,uBAAA,MAAA,uCAAA;AACA,OAAA,YAAA,MAAA,gBAAA;AACA,IAAIA,kBAAkB,GAAG;AACvBC,EAAAA,QAAQ,EADe,UAAA;AAEvBC,EAAAA,IAAI,EAFmB,CAAA;AAGvBC,EAAAA,KAAK,EAHkB,CAAA;AAIvBC,EAAAA,GAAG,EAJoB,CAAA;AAKvBC,EAAAA,MAAM,EAAE;AALe,CAAzB;AAOA,IAAIC,YAAY,GAAGC,uBAAuB,CAAvBA,QAAAA,CAAnB,kBAAmBA,CAAnB;AACA,IAAIC,UAAU,GAAG;AACfF,EAAAA,YAAY,EADG,YAAA;AAEfN,EAAAA,kBAAkB,EAFH,kBAAA;AAGfS,EAAAA,OAAO,EAAE,SAAA,OAAA,CAAA,MAAA,EAAA,MAAA,EAAiC;AACxC,QAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AAEzC,UAAIC,GAAG,GAAGC,SAAS,CAAnB,MAAA;;AAEA,UAAID,GAAG,GAAP,CAAA,EAAa;AACX,YAAIE,cAAc,GAAG,KAAK,CAAL,SAAA,CAAA,KAAA,CAAA,IAAA,CAAA,SAAA,EAAA,GAAA,CAA0C,UAAA,CAAA,EAAa;AAC1E,iBAAOC,YAAY,CAAnB,CAAmB,CAAnB;AADF,SAAqB,CAArB;AAGA,cAAM,IAAA,KAAA,CAAU,6DAAA,GAAA,GAAA,IAAA,GAA0EC,IAAI,CAAJA,SAAAA,CAA1F,cAA0FA,CAApF,CAAN;AACD;AAGF;;AAED,QAAIC,MAAM,IAAV,MAAA,EAAsB;AACpB,aAAO,CAAA,MAAA,EAAP,MAAO,CAAP;AADF,KAAA,MAEO;AACL,aAAOA,MAAM,IAAb,MAAA;AACD;AAtBY,GAAA;AAwBfC,EAAAA,MAAM,EAAE,SAAA,MAAA,CAAA,MAAA,EAAwB;AAC9B,QAAIC,MAAM,GAAV,EAAA;AACAC,IAAAA,MAAM,CAANA,IAAAA,CAAAA,MAAAA,EAAAA,OAAAA,CAA4B,UAAA,GAAA,EAAe;AACzC,UAAIT,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AACzC,YAAIU,QAAQ,GAAGC,OAAO,CAAtB,YAAsB,CAAtB;;AAEA,YAAIC,eAAe,GAAGF,QAAQ,CAARA,SAAQ,CAARA,GAAmBA,QAAQ,CAA3BA,SAA2B,CAA3BA,GAAtB,QAAA;AACAE,QAAAA,eAAe,CAAA,GAAA,EAAfA,MAAe,CAAfA;AACD;;AAED,UAAIC,EAAE,GAAGC,MAAM,CAANA,GAAM,CAANA,IAAejB,uBAAuB,CAAvBA,QAAAA,CAAiCiB,MAAM,CAA/D,GAA+D,CAAvCjB,CAAxB;AACAW,MAAAA,MAAM,CAANA,GAAM,CAANA,GAAAA,EAAAA;AATFC,KAAAA;AAWA,WAAA,MAAA;AArCa,GAAA;AAuCfM,EAAAA,OAAO,EAvCQ,YAAA;AAwCfC,EAAAA,aAAa,EAAE;AAxCA,CAAjB;AA0CA,eAAA,UAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ReactNativePropRegistry from '../../modules/ReactNativePropRegistry';\nimport flattenStyle from './flattenStyle';\nvar absoluteFillObject = {\n  position: 'absolute',\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\nvar absoluteFill = ReactNativePropRegistry.register(absoluteFillObject);\nvar StyleSheet = {\n  absoluteFill: absoluteFill,\n  absoluteFillObject: absoluteFillObject,\n  compose: function compose(style1, style2) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* eslint-disable prefer-rest-params */\n      var len = arguments.length;\n\n      if (len > 2) {\n        var readableStyles = Array.prototype.slice.call(arguments).map(function (a) {\n          return flattenStyle(a);\n        });\n        throw new Error(\"StyleSheet.compose() only accepts 2 arguments, received \" + len + \": \" + JSON.stringify(readableStyles));\n      }\n      /* eslint-enable prefer-rest-params */\n\n    }\n\n    if (style1 && style2) {\n      return [style1, style2];\n    } else {\n      return style1 || style2;\n    }\n  },\n  create: function create(styles) {\n    var result = {};\n    Object.keys(styles).forEach(function (key) {\n      if (process.env.NODE_ENV !== 'production') {\n        var validate = require('./validate');\n\n        var interopValidate = validate.default ? validate.default : validate;\n        interopValidate(key, styles);\n      }\n\n      var id = styles[key] && ReactNativePropRegistry.register(styles[key]);\n      result[key] = id;\n    });\n    return result;\n  },\n  flatten: flattenStyle,\n  hairlineWidth: 1\n};\nexport default StyleSheet;"]},"metadata":{},"sourceType":"module"}