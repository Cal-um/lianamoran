{"ast":null,"code":"import \"core-js/modules/es6.date.now\";\nimport \"core-js/modules/es6.array.index-of\";\nimport normalizeNativeEvent from '../normalizeNativeEvent';\nimport ReactDOMUnstableNativeDependencies from 'react-dom/unstable-native-dependencies';\nvar ResponderEventPlugin = ReactDOMUnstableNativeDependencies.ResponderEventPlugin,\n    ResponderTouchHistoryStore = ReactDOMUnstableNativeDependencies.ResponderTouchHistoryStore;\n\nif (!ResponderEventPlugin.eventTypes.responderMove.dependencies) {\n  var topMouseDown = 'topMouseDown';\n  var topMouseMove = 'topMouseMove';\n  var topMouseUp = 'topMouseUp';\n  var topScroll = 'topScroll';\n  var topSelectionChange = 'topSelectionChange';\n  var topTouchCancel = 'topTouchCancel';\n  var topTouchEnd = 'topTouchEnd';\n  var topTouchMove = 'topTouchMove';\n  var topTouchStart = 'topTouchStart';\n  var endDependencies = [topTouchCancel, topTouchEnd, topMouseUp];\n  var moveDependencies = [topTouchMove, topMouseMove];\n  var startDependencies = [topTouchStart, topMouseDown];\n  ResponderEventPlugin.eventTypes.responderMove.dependencies = moveDependencies;\n  ResponderEventPlugin.eventTypes.responderEnd.dependencies = endDependencies;\n  ResponderEventPlugin.eventTypes.responderStart.dependencies = startDependencies;\n  ResponderEventPlugin.eventTypes.responderRelease.dependencies = endDependencies;\n  ResponderEventPlugin.eventTypes.responderTerminationRequest.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderGrant.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderReject.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderTerminate.dependencies = [];\n  ResponderEventPlugin.eventTypes.moveShouldSetResponder.dependencies = moveDependencies;\n  ResponderEventPlugin.eventTypes.selectionChangeShouldSetResponder.dependencies = [topSelectionChange];\n  ResponderEventPlugin.eventTypes.scrollShouldSetResponder.dependencies = [topScroll];\n  ResponderEventPlugin.eventTypes.startShouldSetResponder.dependencies = startDependencies;\n}\n\nvar lastActiveTouchTimestamp = null;\nvar EMULATED_MOUSE_THERSHOLD_MS = 1000;\nvar originalExtractEvents = ResponderEventPlugin.extractEvents;\n\nResponderEventPlugin.extractEvents = function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var hasActiveTouches = ResponderTouchHistoryStore.touchHistory.numberActiveTouches > 0;\n  var eventType = nativeEvent.type;\n  var shouldSkipMouseAfterTouch = false;\n\n  if (eventType.indexOf('touch') > -1) {\n    lastActiveTouchTimestamp = Date.now();\n  } else if (lastActiveTouchTimestamp && eventType.indexOf('mouse') > -1) {\n    var now = Date.now();\n    shouldSkipMouseAfterTouch = now - lastActiveTouchTimestamp < EMULATED_MOUSE_THERSHOLD_MS;\n  }\n\n  if ((eventType === 'mousemove' || eventType === 'mouseup') && !hasActiveTouches || nativeEvent.button === 1 || nativeEvent.button === 2 || shouldSkipMouseAfterTouch) {\n    return;\n  }\n\n  var normalizedEvent = normalizeNativeEvent(nativeEvent);\n  return originalExtractEvents.call(ResponderEventPlugin, topLevelType, targetInst, normalizedEvent, nativeEventTarget);\n};\n\nexport default ResponderEventPlugin;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/modules/ResponderEventPlugin/index.js"],"names":["ResponderEventPlugin","ReactDOMUnstableNativeDependencies","ResponderTouchHistoryStore","topMouseDown","topMouseMove","topMouseUp","topScroll","topSelectionChange","topTouchCancel","topTouchEnd","topTouchMove","topTouchStart","endDependencies","moveDependencies","startDependencies","lastActiveTouchTimestamp","EMULATED_MOUSE_THERSHOLD_MS","originalExtractEvents","hasActiveTouches","eventType","nativeEvent","shouldSkipMouseAfterTouch","Date","now","normalizedEvent","normalizeNativeEvent"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n// based on https://github.com/facebook/react/pull/4303/files\nimport normalizeNativeEvent from '../normalizeNativeEvent';\nimport ReactDOMUnstableNativeDependencies from 'react-dom/unstable-native-dependencies';\nvar ResponderEventPlugin = ReactDOMUnstableNativeDependencies.ResponderEventPlugin,\n    ResponderTouchHistoryStore = ReactDOMUnstableNativeDependencies.ResponderTouchHistoryStore; // On older versions of React (< 16.4) we have to inject the dependencies in\n// order for the plugin to work properly in the browser. This version still\n// uses `top*` strings to identify the internal event names.\n// https://github.com/facebook/react/pull/12629\n\nif (!ResponderEventPlugin.eventTypes.responderMove.dependencies) {\n  var topMouseDown = 'topMouseDown';\n  var topMouseMove = 'topMouseMove';\n  var topMouseUp = 'topMouseUp';\n  var topScroll = 'topScroll';\n  var topSelectionChange = 'topSelectionChange';\n  var topTouchCancel = 'topTouchCancel';\n  var topTouchEnd = 'topTouchEnd';\n  var topTouchMove = 'topTouchMove';\n  var topTouchStart = 'topTouchStart';\n  var endDependencies = [topTouchCancel, topTouchEnd, topMouseUp];\n  var moveDependencies = [topTouchMove, topMouseMove];\n  var startDependencies = [topTouchStart, topMouseDown];\n  /**\n   * Setup ResponderEventPlugin dependencies\n   */\n\n  ResponderEventPlugin.eventTypes.responderMove.dependencies = moveDependencies;\n  ResponderEventPlugin.eventTypes.responderEnd.dependencies = endDependencies;\n  ResponderEventPlugin.eventTypes.responderStart.dependencies = startDependencies;\n  ResponderEventPlugin.eventTypes.responderRelease.dependencies = endDependencies;\n  ResponderEventPlugin.eventTypes.responderTerminationRequest.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderGrant.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderReject.dependencies = [];\n  ResponderEventPlugin.eventTypes.responderTerminate.dependencies = [];\n  ResponderEventPlugin.eventTypes.moveShouldSetResponder.dependencies = moveDependencies;\n  ResponderEventPlugin.eventTypes.selectionChangeShouldSetResponder.dependencies = [topSelectionChange];\n  ResponderEventPlugin.eventTypes.scrollShouldSetResponder.dependencies = [topScroll];\n  ResponderEventPlugin.eventTypes.startShouldSetResponder.dependencies = startDependencies;\n}\n\nvar lastActiveTouchTimestamp = null; // The length of time after a touch that we ignore the browser's emulated mouse events\n// https://developer.mozilla.org/en-US/docs/Web/API/Touch_events/Using_Touch_Events\n\nvar EMULATED_MOUSE_THERSHOLD_MS = 1000;\nvar originalExtractEvents = ResponderEventPlugin.extractEvents;\n\nResponderEventPlugin.extractEvents = function (topLevelType, targetInst, nativeEvent, nativeEventTarget) {\n  var hasActiveTouches = ResponderTouchHistoryStore.touchHistory.numberActiveTouches > 0;\n  var eventType = nativeEvent.type;\n  var shouldSkipMouseAfterTouch = false;\n\n  if (eventType.indexOf('touch') > -1) {\n    lastActiveTouchTimestamp = Date.now();\n  } else if (lastActiveTouchTimestamp && eventType.indexOf('mouse') > -1) {\n    var now = Date.now();\n    shouldSkipMouseAfterTouch = now - lastActiveTouchTimestamp < EMULATED_MOUSE_THERSHOLD_MS;\n  }\n\n  if ( // Filter out mousemove and mouseup events when a touch hasn't started yet\n  (eventType === 'mousemove' || eventType === 'mouseup') && !hasActiveTouches || // Filter out events from wheel/middle and right click.\n  nativeEvent.button === 1 || nativeEvent.button === 2 || // Filter out mouse events that browsers dispatch immediately after touch events end\n  // Prevents the REP from calling handlers twice for touch interactions.\n  // See #802 and #932.\n  shouldSkipMouseAfterTouch) {\n    return;\n  }\n\n  var normalizedEvent = normalizeNativeEvent(nativeEvent);\n  return originalExtractEvents.call(ResponderEventPlugin, topLevelType, targetInst, normalizedEvent, nativeEventTarget);\n};\n\nexport default ResponderEventPlugin;"]},"metadata":{},"sourceType":"module"}