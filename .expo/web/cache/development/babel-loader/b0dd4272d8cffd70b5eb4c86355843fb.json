{"ast":null,"code":"import ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\nvar doLeftAndRightSwapInRTL = true;\nvar isPreferredLanguageRTL = false;\nvar isRTLAllowed = true;\nvar isRTLForced = false;\n\nvar isRTL = function isRTL() {\n  if (isRTLForced) {\n    return true;\n  }\n\n  return isRTLAllowed && isPreferredLanguageRTL;\n};\n\nvar onDirectionChange = function onDirectionChange() {\n  if (ExecutionEnvironment.canUseDOM) {\n    if (document.documentElement && document.documentElement.setAttribute) {\n      document.documentElement.setAttribute('dir', isRTL() ? 'rtl' : 'ltr');\n    }\n  }\n};\n\nvar I18nManager = {\n  allowRTL: function allowRTL(bool) {\n    isRTLAllowed = bool;\n    onDirectionChange();\n  },\n  forceRTL: function forceRTL(bool) {\n    isRTLForced = bool;\n    onDirectionChange();\n  },\n  setPreferredLanguageRTL: function setPreferredLanguageRTL(bool) {\n    isPreferredLanguageRTL = bool;\n    onDirectionChange();\n  },\n  swapLeftAndRightInRTL: function swapLeftAndRightInRTL(bool) {\n    doLeftAndRightSwapInRTL = bool;\n  },\n\n  get doLeftAndRightSwapInRTL() {\n    return doLeftAndRightSwapInRTL;\n  },\n\n  get isRTL() {\n    return isRTL();\n  }\n\n};\nexport default I18nManager;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/exports/I18nManager/index.js"],"names":["doLeftAndRightSwapInRTL","isPreferredLanguageRTL","isRTLAllowed","isRTLForced","isRTL","onDirectionChange","ExecutionEnvironment","document","I18nManager","allowRTL","forceRTL","setPreferredLanguageRTL","swapLeftAndRightInRTL"],"mappings":"AASA,OAAA,oBAAA,MAAA,+BAAA;AACA,IAAIA,uBAAuB,GAA3B,IAAA;AACA,IAAIC,sBAAsB,GAA1B,KAAA;AACA,IAAIC,YAAY,GAAhB,IAAA;AACA,IAAIC,WAAW,GAAf,KAAA;;AAEA,IAAIC,KAAK,GAAG,SAAA,KAAA,GAAiB;AAC3B,MAAA,WAAA,EAAiB;AACf,WAAA,IAAA;AACD;;AAED,SAAOF,YAAY,IAAnB,sBAAA;AALF,CAAA;;AAQA,IAAIG,iBAAiB,GAAG,SAAA,iBAAA,GAA6B;AACnD,MAAIC,oBAAoB,CAAxB,SAAA,EAAoC;AAClC,QAAIC,QAAQ,CAARA,eAAAA,IAA4BA,QAAQ,CAARA,eAAAA,CAAhC,YAAA,EAAuE;AACrEA,MAAAA,QAAQ,CAARA,eAAAA,CAAAA,YAAAA,CAAAA,KAAAA,EAA6CH,KAAK,KAAA,KAAA,GAAlDG,KAAAA;AACD;AACF;AALH,CAAA;;AAQA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,IAAA,EAAwB;AAChCP,IAAAA,YAAY,GAAZA,IAAAA;AACAG,IAAAA,iBAAiB;AAHH,GAAA;AAKhBK,EAAAA,QAAQ,EAAE,SAAA,QAAA,CAAA,IAAA,EAAwB;AAChCP,IAAAA,WAAW,GAAXA,IAAAA;AACAE,IAAAA,iBAAiB;AAPH,GAAA;AAShBM,EAAAA,uBAAuB,EAAE,SAAA,uBAAA,CAAA,IAAA,EAAuC;AAC9DV,IAAAA,sBAAsB,GAAtBA,IAAAA;AACAI,IAAAA,iBAAiB;AAXH,GAAA;AAahBO,EAAAA,qBAAqB,EAAE,SAAA,qBAAA,CAAA,IAAA,EAAqC;AAC1DZ,IAAAA,uBAAuB,GAAvBA,IAAAA;AAdc,GAAA;;AAiBhB,MAAA,uBAAA,GAA8B;AAC5B,WAAA,uBAAA;AAlBc,GAAA;;AAqBhB,MAAA,KAAA,GAAY;AACV,WAAOI,KAAP,EAAA;AACD;;AAvBe,CAAlB;AA0BA,eAAA,WAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ExecutionEnvironment from 'fbjs/lib/ExecutionEnvironment';\nvar doLeftAndRightSwapInRTL = true;\nvar isPreferredLanguageRTL = false;\nvar isRTLAllowed = true;\nvar isRTLForced = false;\n\nvar isRTL = function isRTL() {\n  if (isRTLForced) {\n    return true;\n  }\n\n  return isRTLAllowed && isPreferredLanguageRTL;\n};\n\nvar onDirectionChange = function onDirectionChange() {\n  if (ExecutionEnvironment.canUseDOM) {\n    if (document.documentElement && document.documentElement.setAttribute) {\n      document.documentElement.setAttribute('dir', isRTL() ? 'rtl' : 'ltr');\n    }\n  }\n};\n\nvar I18nManager = {\n  allowRTL: function allowRTL(bool) {\n    isRTLAllowed = bool;\n    onDirectionChange();\n  },\n  forceRTL: function forceRTL(bool) {\n    isRTLForced = bool;\n    onDirectionChange();\n  },\n  setPreferredLanguageRTL: function setPreferredLanguageRTL(bool) {\n    isPreferredLanguageRTL = bool;\n    onDirectionChange();\n  },\n  swapLeftAndRightInRTL: function swapLeftAndRightInRTL(bool) {\n    doLeftAndRightSwapInRTL = bool;\n  },\n\n  get doLeftAndRightSwapInRTL() {\n    return doLeftAndRightSwapInRTL;\n  },\n\n  get isRTL() {\n    return isRTL();\n  }\n\n};\nexport default I18nManager;"]},"metadata":{},"sourceType":"module"}