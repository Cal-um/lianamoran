{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.object.create\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.reflect.construct\";\nimport \"core-js/modules/es6.object.set-prototype-of\";\nimport \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.string.iterator\";\nimport \"regenerator-runtime/runtime\";\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof (typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\") === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== (typeof Symbol === \"function\" ? Symbol.prototype : \"@@prototype\") ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarAndroid } from './react-native';\nvar ICON_PROP_NAMES = ['iconSize', 'iconColor', 'titleColor'];\nvar LOGO_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['logoName']);\nvar NAV_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['navIconName']);\nvar OVERFLOW_ICON_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['overflowIconName']);\nvar ACTIONS_PROP_NAMES = [].concat(ICON_PROP_NAMES, ['actions']);\n\nvar arePropsEqual = function arePropsEqual(keys) {\n  return function (prevProps, nextProps) {\n    return isEqual(pick(prevProps, keys), pick(nextProps, keys));\n  };\n};\n\nvar areLogoIconPropsEqual = arePropsEqual(LOGO_ICON_PROP_NAMES);\nvar areNavIconPropsEqual = arePropsEqual(NAV_ICON_PROP_NAMES);\nvar areOverflowIconPropsEqual = arePropsEqual(OVERFLOW_ICON_PROP_NAMES);\nvar areActionPropsEqual = arePropsEqual(ACTIONS_PROP_NAMES);\nexport default function createToolbarAndroidComponent(IconNamePropType, getImageSource) {\n  var _class, _temp;\n\n  return _temp = _class = function (_PureComponent) {\n    _inherits(IconToolbarAndroid, _PureComponent);\n\n    var _super = _createSuper(IconToolbarAndroid);\n\n    function IconToolbarAndroid() {\n      var _this;\n\n      _classCallCheck(this, IconToolbarAndroid);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _super.call.apply(_super, [this].concat(args));\n\n      _defineProperty(_assertThisInitialized(_this), \"state\", {\n        logo: undefined,\n        navIcon: undefined,\n        overflowIcon: undefined,\n        actions: undefined\n      });\n\n      return _this;\n    }\n\n    _createClass(IconToolbarAndroid, [{\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        this.updateLogoIconSource();\n        this.updateNavIconSource();\n        this.updateOverflowIconSource();\n        this.updateActionIconSources();\n      }\n    }, {\n      key: \"componentDidUpdate\",\n      value: function componentDidUpdate(prevProps) {\n        if (!areLogoIconPropsEqual(prevProps, this.props)) {\n          this.updateLogoIconSource();\n        }\n\n        if (!areNavIconPropsEqual(prevProps, this.props)) {\n          this.updateNavIconSource();\n        }\n\n        if (!areOverflowIconPropsEqual(prevProps, this.props)) {\n          this.updateOverflowIconSource();\n        }\n\n        if (!areActionPropsEqual(prevProps, this.props)) {\n          this.updateActionIconSources();\n        }\n      }\n    }, {\n      key: \"updateLogoIconSource\",\n      value: function () {\n        var _updateLogoIconSource = _asyncToGenerator(_regeneratorRuntime.mark(function _callee() {\n          var _this$props, logoName, iconSize, iconColor, titleColor, logo;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this$props = this.props, logoName = _this$props.logoName, iconSize = _this$props.iconSize, iconColor = _this$props.iconColor, titleColor = _this$props.titleColor;\n\n                  if (!logoName) {\n                    _context.next = 8;\n                    break;\n                  }\n\n                  _context.next = 4;\n                  return getImageSource(logoName, iconSize, iconColor || titleColor);\n\n                case 4:\n                  logo = _context.sent;\n                  this.setState({\n                    logo: logo\n                  });\n                  _context.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.logo) {\n                    this.setState({\n                      logo: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        function updateLogoIconSource() {\n          return _updateLogoIconSource.apply(this, arguments);\n        }\n\n        return updateLogoIconSource;\n      }()\n    }, {\n      key: \"updateNavIconSource\",\n      value: function () {\n        var _updateNavIconSource = _asyncToGenerator(_regeneratorRuntime.mark(function _callee2() {\n          var _this$props2, navIconName, iconSize, iconColor, titleColor, navIcon;\n\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _this$props2 = this.props, navIconName = _this$props2.navIconName, iconSize = _this$props2.iconSize, iconColor = _this$props2.iconColor, titleColor = _this$props2.titleColor;\n\n                  if (!navIconName) {\n                    _context2.next = 8;\n                    break;\n                  }\n\n                  _context2.next = 4;\n                  return getImageSource(navIconName, iconSize, iconColor || titleColor);\n\n                case 4:\n                  navIcon = _context2.sent;\n                  this.setState({\n                    navIcon: navIcon\n                  });\n                  _context2.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.navIcon) {\n                    this.setState({\n                      navIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n\n        function updateNavIconSource() {\n          return _updateNavIconSource.apply(this, arguments);\n        }\n\n        return updateNavIconSource;\n      }()\n    }, {\n      key: \"updateOverflowIconSource\",\n      value: function () {\n        var _updateOverflowIconSource = _asyncToGenerator(_regeneratorRuntime.mark(function _callee3() {\n          var _this$props3, overflowIconName, iconSize, iconColor, titleColor, overflowIcon;\n\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  _this$props3 = this.props, overflowIconName = _this$props3.overflowIconName, iconSize = _this$props3.iconSize, iconColor = _this$props3.iconColor, titleColor = _this$props3.titleColor;\n\n                  if (!overflowIconName) {\n                    _context3.next = 8;\n                    break;\n                  }\n\n                  _context3.next = 4;\n                  return getImageSource(overflowIconName, iconSize, iconColor || titleColor);\n\n                case 4:\n                  overflowIcon = _context3.sent;\n                  this.setState({\n                    overflowIcon: overflowIcon\n                  });\n                  _context3.next = 9;\n                  break;\n\n                case 8:\n                  if (this.state.overflowIcon) {\n                    this.setState({\n                      overflowIcon: undefined\n                    });\n                  }\n\n                case 9:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3, this);\n        }));\n\n        function updateOverflowIconSource() {\n          return _updateOverflowIconSource.apply(this, arguments);\n        }\n\n        return updateOverflowIconSource;\n      }()\n    }, {\n      key: \"updateActionIconSources\",\n      value: function () {\n        var _updateActionIconSources = _asyncToGenerator(_regeneratorRuntime.mark(function _callee4() {\n          var _this$props4, actions, iconSize, iconColor, titleColor, updatedActions;\n\n          return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n            while (1) {\n              switch (_context4.prev = _context4.next) {\n                case 0:\n                  _this$props4 = this.props, actions = _this$props4.actions, iconSize = _this$props4.iconSize, iconColor = _this$props4.iconColor, titleColor = _this$props4.titleColor;\n                  _context4.next = 3;\n                  return Promise.all((actions || []).map(function (action) {\n                    if (action.iconName) {\n                      return getImageSource(action.iconName, action.iconSize || iconSize, action.iconColor || iconColor || titleColor).then(function (icon) {\n                        return _objectSpread(_objectSpread({}, action), {}, {\n                          icon: icon\n                        });\n                      });\n                    }\n\n                    return Promise.resolve(action);\n                  }));\n\n                case 3:\n                  updatedActions = _context4.sent;\n                  this.setState({\n                    actions: updatedActions\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context4.stop();\n              }\n            }\n          }, _callee4, this);\n        }));\n\n        function updateActionIconSources() {\n          return _updateActionIconSources.apply(this, arguments);\n        }\n\n        return updateActionIconSources;\n      }()\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React.createElement(ToolbarAndroid, _extends({}, this.props, this.state));\n      }\n    }]);\n\n    return IconToolbarAndroid;\n  }(PureComponent), _defineProperty(_class, \"propTypes\", {\n    logoName: IconNamePropType,\n    navIconName: IconNamePropType,\n    overflowIconName: IconNamePropType,\n    actions: PropTypes.arrayOf(PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      iconName: IconNamePropType,\n      iconSize: PropTypes.number,\n      iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      show: PropTypes.oneOf(['always', 'ifRoom', 'never']),\n      showWithText: PropTypes.bool\n    })),\n    iconSize: PropTypes.number,\n    iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    titleColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n  }), _defineProperty(_class, \"defaultProps\", {\n    iconSize: 24\n  }), _temp;\n}","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-vector-icons/lib/toolbar-android.js"],"names":["ICON_PROP_NAMES","LOGO_ICON_PROP_NAMES","NAV_ICON_PROP_NAMES","OVERFLOW_ICON_PROP_NAMES","ACTIONS_PROP_NAMES","arePropsEqual","isEqual","pick","areLogoIconPropsEqual","areNavIconPropsEqual","areOverflowIconPropsEqual","areActionPropsEqual","logoName","navIconName","overflowIconName","actions","title","PropTypes","iconName","iconSize","iconColor","show","showWithText","bool","titleColor","logo","navIcon","overflowIcon","undefined","getImageSource","updatedActions","action","icon","Promise"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarAndroid } from './react-native';\n\nconst ICON_PROP_NAMES = ['iconSize', 'iconColor', 'titleColor'];\nconst LOGO_ICON_PROP_NAMES = [...ICON_PROP_NAMES, 'logoName'];\nconst NAV_ICON_PROP_NAMES = [...ICON_PROP_NAMES, 'navIconName'];\nconst OVERFLOW_ICON_PROP_NAMES = [...ICON_PROP_NAMES, 'overflowIconName'];\nconst ACTIONS_PROP_NAMES = [...ICON_PROP_NAMES, 'actions'];\n\nconst arePropsEqual = keys => (prevProps, nextProps) =>\n  isEqual(pick(prevProps, keys), pick(nextProps, keys));\n\nconst areLogoIconPropsEqual = arePropsEqual(LOGO_ICON_PROP_NAMES);\nconst areNavIconPropsEqual = arePropsEqual(NAV_ICON_PROP_NAMES);\nconst areOverflowIconPropsEqual = arePropsEqual(OVERFLOW_ICON_PROP_NAMES);\nconst areActionPropsEqual = arePropsEqual(ACTIONS_PROP_NAMES);\n\nexport default function createToolbarAndroidComponent(\n  IconNamePropType,\n  getImageSource\n) {\n  return class IconToolbarAndroid extends PureComponent {\n    static propTypes = {\n      logoName: IconNamePropType,\n      navIconName: IconNamePropType,\n      overflowIconName: IconNamePropType,\n      actions: PropTypes.arrayOf(\n        PropTypes.shape({\n          title: PropTypes.string.isRequired,\n          iconName: IconNamePropType,\n          iconSize: PropTypes.number,\n          iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n          show: PropTypes.oneOf(['always', 'ifRoom', 'never']),\n          showWithText: PropTypes.bool,\n        })\n      ),\n      iconSize: PropTypes.number,\n      iconColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      titleColor: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    };\n\n    static defaultProps = {\n      iconSize: 24,\n    };\n\n    state = {\n      logo: undefined,\n      navIcon: undefined,\n      overflowIcon: undefined,\n      actions: undefined,\n    };\n\n    componentDidMount() {\n      this.updateLogoIconSource();\n      this.updateNavIconSource();\n      this.updateOverflowIconSource();\n      this.updateActionIconSources();\n    }\n\n    componentDidUpdate(prevProps) {\n      if (!areLogoIconPropsEqual(prevProps, this.props)) {\n        this.updateLogoIconSource();\n      }\n      if (!areNavIconPropsEqual(prevProps, this.props)) {\n        this.updateNavIconSource();\n      }\n      if (!areOverflowIconPropsEqual(prevProps, this.props)) {\n        this.updateOverflowIconSource();\n      }\n      if (!areActionPropsEqual(prevProps, this.props)) {\n        this.updateActionIconSources();\n      }\n    }\n\n    async updateLogoIconSource() {\n      const { logoName, iconSize, iconColor, titleColor } = this.props;\n      if (logoName) {\n        const logo = await getImageSource(\n          logoName,\n          iconSize,\n          iconColor || titleColor\n        );\n        this.setState({ logo });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.logo) {\n        this.setState({ logo: undefined });\n      }\n    }\n\n    async updateNavIconSource() {\n      const { navIconName, iconSize, iconColor, titleColor } = this.props;\n      if (navIconName) {\n        const navIcon = await getImageSource(\n          navIconName,\n          iconSize,\n          iconColor || titleColor\n        );\n        this.setState({ navIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.navIcon) {\n        this.setState({ navIcon: undefined });\n      }\n    }\n\n    async updateOverflowIconSource() {\n      const { overflowIconName, iconSize, iconColor, titleColor } = this.props;\n      if (overflowIconName) {\n        const overflowIcon = await getImageSource(\n          overflowIconName,\n          iconSize,\n          iconColor || titleColor\n        );\n        this.setState({ overflowIcon });\n        // eslint-disable-next-line react/destructuring-assignment\n      } else if (this.state.overflowIcon) {\n        this.setState({ overflowIcon: undefined });\n      }\n    }\n\n    async updateActionIconSources() {\n      const { actions, iconSize, iconColor, titleColor } = this.props;\n      const updatedActions = await Promise.all(\n        (actions || []).map(action => {\n          if (action.iconName) {\n            return getImageSource(\n              action.iconName,\n              action.iconSize || iconSize,\n              action.iconColor || iconColor || titleColor\n            ).then(icon => ({ ...action, icon }));\n          }\n          return Promise.resolve(action);\n        })\n      );\n      this.setState({ actions: updatedActions });\n    }\n\n    render() {\n      return <ToolbarAndroid {...this.props} {...this.state} />;\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}