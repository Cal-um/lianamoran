{"ast":null,"code":"import \"core-js/modules/es6.array.is-array\";\nimport ReactNativePropRegistry from '../../modules/ReactNativePropRegistry';\nimport invariant from 'fbjs/lib/invariant';\n\nfunction getStyle(style) {\n  if (typeof style === 'number') {\n    return ReactNativePropRegistry.getByID(style);\n  }\n\n  return style;\n}\n\nfunction flattenStyle(style) {\n  if (!style) {\n    return undefined;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(style !== true, 'style may be false but not true');\n  }\n\n  if (!Array.isArray(style)) {\n    return getStyle(style);\n  }\n\n  var result = {};\n\n  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {\n    var computedStyle = flattenStyle(style[i]);\n\n    if (computedStyle) {\n      for (var key in computedStyle) {\n        var value = computedStyle[key];\n        result[key] = value;\n      }\n    }\n  }\n\n  return result;\n}\n\nexport default flattenStyle;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/exports/StyleSheet/flattenStyle.js"],"names":["ReactNativePropRegistry","process","invariant","style","Array","getStyle","result","i","styleLength","computedStyle","flattenStyle","value"],"mappings":";AASA,OAAA,uBAAA,MAAA,uCAAA;AACA,OAAA,SAAA,MAAA,oBAAA;;AAEA,SAAA,QAAA,CAAA,KAAA,EAAyB;AACvB,MAAI,OAAA,KAAA,KAAJ,QAAA,EAA+B;AAC7B,WAAOA,uBAAuB,CAAvBA,OAAAA,CAAP,KAAOA,CAAP;AACD;;AAED,SAAA,KAAA;AACD;;AAED,SAAA,YAAA,CAAA,KAAA,EAA6B;AAC3B,MAAI,CAAJ,KAAA,EAAY;AACV,WAAA,SAAA;AACD;;AAED,MAAIC,OAAO,CAAPA,GAAAA,CAAAA,QAAAA,KAAJ,YAAA,EAA2C;AACzCC,IAAAA,SAAS,CAACC,KAAK,KAAN,IAAA,EAATD,iCAAS,CAATA;AACD;;AAED,MAAI,CAACE,KAAK,CAALA,OAAAA,CAAL,KAAKA,CAAL,EAA2B;AACzB,WAAOC,QAAQ,CAAf,KAAe,CAAf;AACD;;AAED,MAAIC,MAAM,GAAV,EAAA;;AAEA,OAAK,IAAIC,CAAC,GAAL,CAAA,EAAWC,WAAW,GAAGL,KAAK,CAAnC,MAAA,EAA4CI,CAAC,GAA7C,WAAA,EAA6D,EAA7D,CAAA,EAAkE;AAChE,QAAIE,aAAa,GAAGC,YAAY,CAACP,KAAK,CAAtC,CAAsC,CAAN,CAAhC;;AAEA,QAAA,aAAA,EAAmB;AACjB,WAAK,IAAL,GAAA,IAAA,aAAA,EAA+B;AAC7B,YAAIQ,KAAK,GAAGF,aAAa,CAAzB,GAAyB,CAAzB;AACAH,QAAAA,MAAM,CAANA,GAAM,CAANA,GAAAA,KAAAA;AACD;AACF;AACF;;AAED,SAAA,MAAA;AACD;;AAED,eAAA,YAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ReactNativePropRegistry from '../../modules/ReactNativePropRegistry';\nimport invariant from 'fbjs/lib/invariant';\n\nfunction getStyle(style) {\n  if (typeof style === 'number') {\n    return ReactNativePropRegistry.getByID(style);\n  }\n\n  return style;\n}\n\nfunction flattenStyle(style) {\n  if (!style) {\n    return undefined;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    invariant(style !== true, 'style may be false but not true');\n  }\n\n  if (!Array.isArray(style)) {\n    return getStyle(style);\n  }\n\n  var result = {};\n\n  for (var i = 0, styleLength = style.length; i < styleLength; ++i) {\n    var computedStyle = flattenStyle(style[i]);\n\n    if (computedStyle) {\n      for (var key in computedStyle) {\n        var value = computedStyle[key];\n        result[key] = value;\n      }\n    }\n  }\n\n  return result;\n}\n\nexport default flattenStyle;"]},"metadata":{},"sourceType":"module"}