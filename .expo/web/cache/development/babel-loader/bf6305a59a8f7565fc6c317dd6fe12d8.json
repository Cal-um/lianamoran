{"ast":null,"code":"import { arrayOf, number, oneOf, oneOfType, shape, string } from 'prop-types';\nvar numberOrString = oneOfType([number, string]);\nvar TransformPropTypes = {\n  perspective: oneOfType([number, string]),\n  perspectiveOrigin: string,\n  transform: arrayOf(oneOfType([shape({\n    perspective: numberOrString\n  }), shape({\n    rotate: string\n  }), shape({\n    rotateX: string\n  }), shape({\n    rotateY: string\n  }), shape({\n    rotateZ: string\n  }), shape({\n    scale: number\n  }), shape({\n    scaleX: number\n  }), shape({\n    scaleY: number\n  }), shape({\n    scaleZ: number\n  }), shape({\n    scale3d: string\n  }), shape({\n    skewX: string\n  }), shape({\n    skewY: string\n  }), shape({\n    translateX: numberOrString\n  }), shape({\n    translateY: numberOrString\n  }), shape({\n    translateZ: numberOrString\n  }), shape({\n    translate3d: string\n  })])),\n  transformOrigin: string,\n  transformStyle: oneOf(['flat', 'preserve-3d'])\n};\nexport default TransformPropTypes;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/modules/TransformPropTypes/index.js"],"names":["numberOrString","oneOfType","TransformPropTypes","perspective","perspectiveOrigin","transform","arrayOf","shape","rotate","string","rotateX","rotateY","rotateZ","scale","number","scaleX","scaleY","scaleZ","scale3d","skewX","skewY","translateX","translateY","translateZ","translate3d","transformOrigin","transformStyle","oneOf"],"mappings":"AASA,SAAA,OAAA,EAAA,MAAA,EAAA,KAAA,EAAA,SAAA,EAAA,KAAA,EAAA,MAAA,QAAA,YAAA;AACA,IAAIA,cAAc,GAAGC,SAAS,CAAC,CAAA,MAAA,EAA/B,MAA+B,CAAD,CAA9B;AACA,IAAIC,kBAAkB,GAAG;AACvBC,EAAAA,WAAW,EAAEF,SAAS,CAAC,CAAA,MAAA,EADA,MACA,CAAD,CADC;AAEvBG,EAAAA,iBAAiB,EAFM,MAAA;AAGvBC,EAAAA,SAAS,EAAEC,OAAO,CAACL,SAAS,CAAC,CAACM,KAAK,CAAC;AAClCJ,IAAAA,WAAW,EAAEH;AADqB,GAAD,CAAN,EAEzBO,KAAK,CAAC;AACRC,IAAAA,MAAM,EAAEC;AADA,GAAD,CAFoB,EAIzBF,KAAK,CAAC;AACRG,IAAAA,OAAO,EAAED;AADD,GAAD,CAJoB,EAMzBF,KAAK,CAAC;AACRI,IAAAA,OAAO,EAAEF;AADD,GAAD,CANoB,EAQzBF,KAAK,CAAC;AACRK,IAAAA,OAAO,EAAEH;AADD,GAAD,CARoB,EAUzBF,KAAK,CAAC;AACRM,IAAAA,KAAK,EAAEC;AADC,GAAD,CAVoB,EAYzBP,KAAK,CAAC;AACRQ,IAAAA,MAAM,EAAED;AADA,GAAD,CAZoB,EAczBP,KAAK,CAAC;AACRS,IAAAA,MAAM,EAAEF;AADA,GAAD,CAdoB,EAgBzBP,KAAK,CAAC;AACRU,IAAAA,MAAM,EAAEH;AADA,GAAD,CAhBoB,EAkBzBP,KAAK,CAAC;AACRW,IAAAA,OAAO,EAAET;AADD,GAAD,CAlBoB,EAoBzBF,KAAK,CAAC;AACRY,IAAAA,KAAK,EAAEV;AADC,GAAD,CApBoB,EAsBzBF,KAAK,CAAC;AACRa,IAAAA,KAAK,EAAEX;AADC,GAAD,CAtBoB,EAwBzBF,KAAK,CAAC;AACRc,IAAAA,UAAU,EAAErB;AADJ,GAAD,CAxBoB,EA0BzBO,KAAK,CAAC;AACRe,IAAAA,UAAU,EAAEtB;AADJ,GAAD,CA1BoB,EA4BzBO,KAAK,CAAC;AACRgB,IAAAA,UAAU,EAAEvB;AADJ,GAAD,CA5BoB,EA8BzBO,KAAK,CAAC;AACRiB,IAAAA,WAAW,EAAEf;AADL,GAAD,CA9BoB,CAAD,CAAV,CAHK;AAoCvBgB,EAAAA,eAAe,EApCQ,MAAA;AAqCvBC,EAAAA,cAAc,EAAEC,KAAK,CAAC,CAAA,MAAA,EAAD,aAAC,CAAD;AArCE,CAAzB;AAuCA,eAAA,kBAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport { arrayOf, number, oneOf, oneOfType, shape, string } from 'prop-types';\nvar numberOrString = oneOfType([number, string]);\nvar TransformPropTypes = {\n  perspective: oneOfType([number, string]),\n  perspectiveOrigin: string,\n  transform: arrayOf(oneOfType([shape({\n    perspective: numberOrString\n  }), shape({\n    rotate: string\n  }), shape({\n    rotateX: string\n  }), shape({\n    rotateY: string\n  }), shape({\n    rotateZ: string\n  }), shape({\n    scale: number\n  }), shape({\n    scaleX: number\n  }), shape({\n    scaleY: number\n  }), shape({\n    scaleZ: number\n  }), shape({\n    scale3d: string\n  }), shape({\n    skewX: string\n  }), shape({\n    skewY: string\n  }), shape({\n    translateX: numberOrString\n  }), shape({\n    translateY: numberOrString\n  }), shape({\n    translateZ: numberOrString\n  }), shape({\n    translate3d: string\n  })])),\n  transformOrigin: string,\n  transformStyle: oneOf(['flat', 'preserve-3d'])\n};\nexport default TransformPropTypes;"]},"metadata":{},"sourceType":"module"}