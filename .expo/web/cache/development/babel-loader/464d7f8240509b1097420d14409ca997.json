{"ast":null,"code":"import getBoundingClientRect from '../../modules/getBoundingClientRect';\nimport setValueForStyles from '../../vendor/react-dom/setValueForStyles';\n\nvar getRect = function getRect(node) {\n  var _getBoundingClientRec = getBoundingClientRect(node),\n      x = _getBoundingClientRec.x,\n      y = _getBoundingClientRec.y,\n      top = _getBoundingClientRec.top,\n      left = _getBoundingClientRec.left;\n\n  var width = node.offsetWidth;\n  var height = node.offsetHeight;\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: top,\n    left: left\n  };\n};\n\nvar _measureLayout = function measureLayout(node, relativeToNativeNode, callback) {\n  var relativeNode = relativeToNativeNode || node && node.parentNode;\n\n  if (node && relativeNode) {\n    setTimeout(function () {\n      var relativeRect = getBoundingClientRect(relativeNode);\n\n      var _getRect = getRect(node),\n          height = _getRect.height,\n          left = _getRect.left,\n          top = _getRect.top,\n          width = _getRect.width;\n\n      var x = left - relativeRect.left;\n      var y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\nvar focusableElements = {\n  A: true,\n  INPUT: true,\n  SELECT: true,\n  TEXTAREA: true\n};\nvar UIManager = {\n  blur: function blur(node) {\n    try {\n      node.blur();\n    } catch (err) {}\n  },\n  focus: function focus(node) {\n    try {\n      var name = node.nodeName;\n\n      if (node.getAttribute('tabIndex') == null && focusableElements[name] == null) {\n        node.setAttribute('tabIndex', '-1');\n      }\n\n      node.focus();\n    } catch (err) {}\n  },\n  measure: function measure(node, callback) {\n    _measureLayout(node, null, callback);\n  },\n  measureInWindow: function measureInWindow(node, callback) {\n    if (node) {\n      setTimeout(function () {\n        var _getRect2 = getRect(node),\n            height = _getRect2.height,\n            left = _getRect2.left,\n            top = _getRect2.top,\n            width = _getRect2.width;\n\n        callback(left, top, width, height);\n      }, 0);\n    }\n  },\n  measureLayout: function measureLayout(node, relativeToNativeNode, onFail, onSuccess) {\n    _measureLayout(node, relativeToNativeNode, onSuccess);\n  },\n  updateView: function updateView(node, props, component) {\n    for (var prop in props) {\n      if (!Object.prototype.hasOwnProperty.call(props, prop)) {\n        continue;\n      }\n\n      var value = props[prop];\n\n      switch (prop) {\n        case 'style':\n          {\n            setValueForStyles(node, value, component._reactInternalInstance);\n            break;\n          }\n\n        case 'class':\n        case 'className':\n          {\n            node.setAttribute('class', value);\n            break;\n          }\n\n        case 'text':\n        case 'value':\n          node.value = value;\n          break;\n\n        default:\n          node.setAttribute(prop, value);\n      }\n    }\n  },\n  configureNextLayoutAnimation: function configureNextLayoutAnimation(config, onAnimationDidEnd) {\n    onAnimationDidEnd();\n  },\n  setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental() {}\n};\nexport default UIManager;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/exports/UIManager/index.js"],"names":["getRect","_getBoundingClientRec","getBoundingClientRect","x","y","top","left","width","node","height","_measureLayout","relativeNode","relativeToNativeNode","setTimeout","relativeRect","_getRect","callback","focusableElements","A","INPUT","SELECT","TEXTAREA","UIManager","blur","focus","name","measure","measureInWindow","_getRect2","measureLayout","updateView","component","Object","value","props","setValueForStyles","configureNextLayoutAnimation","onAnimationDidEnd","setLayoutAnimationEnabledExperimental"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport getBoundingClientRect from '../../modules/getBoundingClientRect';\nimport setValueForStyles from '../../vendor/react-dom/setValueForStyles';\n\nvar getRect = function getRect(node) {\n  // Unlike the DOM's getBoundingClientRect, React Native layout measurements\n  // for \"height\" and \"width\" ignore scale transforms.\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Determining_the_dimensions_of_elements\n  var _getBoundingClientRec = getBoundingClientRect(node),\n      x = _getBoundingClientRec.x,\n      y = _getBoundingClientRec.y,\n      top = _getBoundingClientRec.top,\n      left = _getBoundingClientRec.left;\n\n  var width = node.offsetWidth;\n  var height = node.offsetHeight;\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    top: top,\n    left: left\n  };\n};\n\nvar _measureLayout = function measureLayout(node, relativeToNativeNode, callback) {\n  var relativeNode = relativeToNativeNode || node && node.parentNode;\n\n  if (node && relativeNode) {\n    setTimeout(function () {\n      var relativeRect = getBoundingClientRect(relativeNode);\n\n      var _getRect = getRect(node),\n          height = _getRect.height,\n          left = _getRect.left,\n          top = _getRect.top,\n          width = _getRect.width;\n\n      var x = left - relativeRect.left;\n      var y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\nvar focusableElements = {\n  A: true,\n  INPUT: true,\n  SELECT: true,\n  TEXTAREA: true\n};\nvar UIManager = {\n  blur: function blur(node) {\n    try {\n      node.blur();\n    } catch (err) {}\n  },\n  focus: function focus(node) {\n    try {\n      var name = node.nodeName; // A tabIndex of -1 allows element to be programmatically focused but\n      // prevents keyboard focus, so we don't want to set the value on elements\n      // that support keyboard focus by default.\n\n      if (node.getAttribute('tabIndex') == null && focusableElements[name] == null) {\n        node.setAttribute('tabIndex', '-1');\n      }\n\n      node.focus();\n    } catch (err) {}\n  },\n  measure: function measure(node, callback) {\n    _measureLayout(node, null, callback);\n  },\n  measureInWindow: function measureInWindow(node, callback) {\n    if (node) {\n      setTimeout(function () {\n        var _getRect2 = getRect(node),\n            height = _getRect2.height,\n            left = _getRect2.left,\n            top = _getRect2.top,\n            width = _getRect2.width;\n\n        callback(left, top, width, height);\n      }, 0);\n    }\n  },\n  measureLayout: function measureLayout(node, relativeToNativeNode, onFail, onSuccess) {\n    _measureLayout(node, relativeToNativeNode, onSuccess);\n  },\n  updateView: function updateView(node, props, component\n  /* only needed to surpress React errors in development */\n  ) {\n    for (var prop in props) {\n      if (!Object.prototype.hasOwnProperty.call(props, prop)) {\n        continue;\n      }\n\n      var value = props[prop];\n\n      switch (prop) {\n        case 'style':\n          {\n            setValueForStyles(node, value, component._reactInternalInstance);\n            break;\n          }\n\n        case 'class':\n        case 'className':\n          {\n            node.setAttribute('class', value);\n            break;\n          }\n\n        case 'text':\n        case 'value':\n          // native platforms use `text` prop to replace text input value\n          node.value = value;\n          break;\n\n        default:\n          node.setAttribute(prop, value);\n      }\n    }\n  },\n  configureNextLayoutAnimation: function configureNextLayoutAnimation(config, onAnimationDidEnd) {\n    onAnimationDidEnd();\n  },\n  // mocks\n  setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental() {}\n};\nexport default UIManager;"]},"metadata":{},"sourceType":"module"}