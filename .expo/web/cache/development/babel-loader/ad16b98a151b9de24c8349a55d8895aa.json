{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/calumharris/code/liana-moran/src/layouts/index.tsx\";\nimport React, { useRef, useState } from 'react';\nimport HeaderFooter from \"./HeaderFooter\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport useDimentions from '../utils/useDimentions';\n\nvar Layout = function Layout(_ref) {\n  var children = _ref.children,\n      location = _ref.location;\n  var dimensions = useDimentions();\n  var opacity = useRef(new Animated.Value(0)).current;\n\n  var _useState = useState(\"entered\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      mount = _useState2[0],\n      setMount = _useState2[1];\n\n  return React.createElement(Animated.View, {\n    style: {\n      opacity: opacity,\n      minHeight: dimensions.height,\n      minWidth: dimensions.width\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, React.createElement(HeaderFooter, {\n    compact: location.pathname === \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, children));\n};\n\nexport default Layout;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/src/layouts/index.tsx"],"names":["React","useRef","useState","HeaderFooter","useDimentions","Layout","children","location","dimensions","opacity","Animated","Value","current","mount","setMount","minHeight","height","minWidth","width","pathname"],"mappings":";;AAAA,OAAOA,KAAP,IAAoBC,MAApB,EAAuCC,QAAvC,QAAuD,OAAvD;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,OAAOC,aAAP,MAA0B,wBAA1B;;AAEA,IAAMC,MAAqB,GAAG,SAAxBA,MAAwB,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAExD,MAAMC,UAAU,GAAGJ,aAAa,EAAhC;AACA,MAAMK,OAAO,GAAGR,MAAM,CAAC,IAAIS,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA9C;;AAHwD,kBAI9BV,QAAQ,CAAC,SAAD,CAJsB;AAAA;AAAA,MAIjDW,KAJiD;AAAA,MAI1CC,QAJ0C;;AAiCxD,SAOQ,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAE;AAAEL,MAAAA,OAAO,EAAPA,OAAF;AAAWM,MAAAA,SAAS,EAAEP,UAAU,CAACQ,MAAjC;AAAyCC,MAAAA,QAAQ,EAAET,UAAU,CAACU;AAA9D,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEX,QAAQ,CAACY,QAAT,KAAsB,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,QADH,CADF,CAPR;AAeD,CAhDD;;AAkDA,eAAeD,MAAf","sourcesContent":["import React, { FC, useRef, useEffect, useState } from 'react'\nimport HeaderFooter from \"./HeaderFooter\"\nimport { PageProps } from 'gatsby'\nimport { View, Animated } from 'react-native'\nimport useDimentions from '../utils/useDimentions'\nimport { TransitionState } from \"gatsby-plugin-transition-link\"\nconst Layout: FC<PageProps> = ({ children, location }) => {\n\n  const dimensions = useDimentions()\n  const opacity = useRef(new Animated.Value(0)).current\n  const [mount, setMount] = useState(\"entered\")\n\n\n  // useEffect(() => {\n  //   if (mount === \"entered\" || mount === \"entering\") {\n  //     animateIn()\n  //   } else {\n  //     animateOut()\n  //   }\n\n  // }, [mount])\n\n  // const animateIn = () => {\n  //   Animated.timing(opacity, {\n  //     delay:1000,\n  //     toValue: 1,\n  //     duration: 1000,\n  //     useNativeDriver: false\n  //   }).start()\n  // }\n\n  // const animateOut = () => {\n  //   Animated.timing(opacity, {\n  //     toValue: 0,\n  //     duration: 1000,\n  //     useNativeDriver: false\n  //   }).start()\n  // }\n\n  return (\n    // <TransitionState>\n    //   {(transition: any) => {\n    //     console.log(transition.transitionStatus)\n    //     console.log(transition.mount)\n    //     setMount(transition.transitionStatus)\n    //     return (\n          <Animated.View style={{ opacity, minHeight: dimensions.height, minWidth: dimensions.width }}>\n            <HeaderFooter compact={location.pathname === \"/\"}>\n              {children}\n            </HeaderFooter>\n          </Animated.View>)\n    //   }}\n    // </TransitionState>\n  // )??\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}