{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/calumharris/code/liana-moran/src/pages/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Layout from \"../layouts\";\nimport { Caption } from 'react-native-paper';\nimport useDimentions from '../utils/useDimentions';\nexport default (function (props) {\n  var dimentions = useDimentions();\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      imageIndex = _useState2[0],\n      setImageIndex = _useState2[1];\n\n  var opacity = useRef(new Animated.Value(1)).current;\n  useEffect(function () {\n    var timer = setTimeout(changeImage, 5500);\n    return function () {\n      return clearTimeout(timer);\n    };\n  }, [imageIndex]);\n\n  var changeImage = function changeImage() {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 300,\n      useNativeDriver: false\n    }).start(function () {\n      advanceImageIndex();\n      Animated.timing(opacity, {\n        delay: 100,\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: false\n      }).start();\n    });\n  };\n\n  var advanceImageIndex = function advanceImageIndex() {\n    imageIndex === images.length - 1 ? setImageIndex(0) : setImageIndex(imageIndex + 1);\n  };\n\n  console.log({\n    dimentions: dimentions\n  }, \"NEW ONES\");\n  return React.createElement(Layout, _extends({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }), React.createElement(TouchableWithoutFeedback, {\n    onPress: changeImage,\n    style: _objectSpread(_objectSpread({}, dimentions), {}, {\n      position: \"absolute\"\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Animated.View, {\n    style: {\n      opacity: opacity,\n      padding: 16\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    resizeMode: \"contain\",\n    style: {\n      flex: 1\n    },\n    source: require(\"../assets/\" + images[imageIndex].path),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }), React.createElement(Caption, {\n    style: {\n      marginTop: 8,\n      color: \"grey\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, images[imageIndex].title))));\n});\nvar images = [{\n  path: \"RollercoasterFlood.jpeg\",\n  title: \"Roller Coaster Flood\"\n}, {\n  path: \"AerialViewFracking.jpeg\",\n  title: \"Aerial View Fracking\"\n}, {\n  path: \"StormDamageRollercoaster.jpeg\",\n  title: \"Storm Damage - Roller Coaster\"\n}, {\n  path: \"StormDamageRisoPrint.jpeg\",\n  title: \"Storm Damage - Riso Print\"\n}, {\n  path: \"IceStormDamagePlyons.jpeg\",\n  title: \"Ice Storm Damage - Pylons\"\n}, {\n  path: \"0000000732862.jpeg\",\n  title: \"\"\n}, {\n  path: \"0000000732860.jpeg\",\n  title: \"\"\n}, {\n  path: \"0000000732858.jpeg\",\n  title: \"\"\n}, {\n  path: \"0000000732854.jpeg\",\n  title: \"\"\n}];","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/src/pages/index.tsx"],"names":["React","useState","useEffect","useRef","Layout","Caption","useDimentions","props","dimentions","imageIndex","setImageIndex","opacity","Animated","Value","current","timer","setTimeout","changeImage","clearTimeout","timing","toValue","duration","useNativeDriver","start","advanceImageIndex","delay","images","length","console","log","position","padding","flex","require","path","marginTop","color","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { Animated, Image, TouchableWithoutFeedback } from \"react-native\"\nimport Layout from \"../layouts\"\nimport { Caption } from 'react-native-paper'\nimport useDimentions from '../utils/useDimentions'\n\n\nexport default (props: any) => {\n  const dimentions = useDimentions()\n  const [imageIndex, setImageIndex] = useState(0)\n  const opacity = useRef(new Animated.Value(1)).current\n\n  \n  useEffect(() => {\n    const timer = setTimeout(changeImage, 5500)\n    return () => clearTimeout(timer)\n  }, [imageIndex])\n\n  const changeImage = () => {\n    Animated.timing(opacity, {\n      toValue: 0,\n      duration: 300,\n      useNativeDriver: false\n    }).start(() => {\n      advanceImageIndex()\n      Animated.timing(opacity, {\n        delay:100,\n        toValue: 1,\n        duration: 300,\n        useNativeDriver: false\n      }).start()\n    })\n  }\n\n  const advanceImageIndex = () => {\n    imageIndex === (images.length - 1) ? setImageIndex(0) : setImageIndex(imageIndex + 1)\n  }\n\n  console.log({dimentions}, \"NEW ONES\")\n\n  return (\n    <Layout {...props}>\n      <TouchableWithoutFeedback onPress={changeImage} style={{...dimentions, position:\"absolute\"}}>\n        <Animated.View style={{ opacity, padding: 16}}>\n          <Image resizeMode=\"contain\" style={{ flex: 1 }} source={require(`../assets/${images[imageIndex].path}`)} />\n          <Caption style={{ marginTop: 8, color: \"grey\" }}>{images[imageIndex].title}</Caption>\n        </Animated.View>\n      </TouchableWithoutFeedback>\n    </Layout>\n  )\n}\n\nconst images: { path: string, title: string }[] = [\n  { path: \"RollercoasterFlood.jpeg\", title: \"Roller Coaster Flood\" },\n  { path: \"AerialViewFracking.jpeg\", title: \"Aerial View Fracking\" },\n  { path: \"StormDamageRollercoaster.jpeg\", title: \"Storm Damage - Roller Coaster\" },\n  { path: \"StormDamageRisoPrint.jpeg\", title: \"Storm Damage - Riso Print\" },\n  { path: \"IceStormDamagePlyons.jpeg\", title: \"Ice Storm Damage - Pylons\" },\n  { path: \"0000000732862.jpeg\", title: \"\" },\n  { path: \"0000000732860.jpeg\", title: \"\" },\n  { path: \"0000000732858.jpeg\", title: \"\" },\n  { path: \"0000000732854.jpeg\", title: \"\" },\n]\n\n"]},"metadata":{},"sourceType":"module"}