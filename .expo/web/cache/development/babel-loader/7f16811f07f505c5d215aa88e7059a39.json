{"ast":null,"code":"import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport ColorPropType from '../ColorPropType';\nimport TextStylePropTypes from '../Text/TextStylePropTypes';\nimport { oneOf } from 'prop-types';\n\nvar TextInputStylePropTypes = _objectSpread({}, TextStylePropTypes, {\n  caretColor: ColorPropType,\n  resize: oneOf(['none', 'vertical', 'horizontal', 'both'])\n});\n\nexport default TextInputStylePropTypes;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/exports/TextInput/TextInputStylePropTypes.js"],"names":["i","arguments","source","ownKeys","Object","_defineProperty","key","value","enumerable","configurable","writable","obj","TextInputStylePropTypes","_objectSpread","caretColor","resize","oneOf"],"mappings":";;;;;;;;;AAAA,SAAA,aAAA,CAAA,MAAA,EAA+B;AAAE,OAAK,IAAIA,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAGC,SAAS,CAA7B,MAAA,EAAsCD,CAAtC,EAAA,EAA2C;AAAE,QAAIE,MAAM,GAAGD,SAAS,CAATA,CAAS,CAATA,IAAAA,IAAAA,GAAuBA,SAAS,CAAhCA,CAAgC,CAAhCA,GAAb,EAAA;AAAuD,QAAIE,OAAO,GAAGC,MAAM,CAANA,IAAAA,CAAd,MAAcA,CAAd;;AAAmC,QAAI,OAAOA,MAAM,CAAb,qBAAA,KAAJ,UAAA,EAAwD;AAAED,MAAAA,OAAO,GAAG,OAAO,CAAP,MAAA,CAAe,MAAM,CAAN,qBAAA,CAAA,MAAA,EAAA,MAAA,CAA4C,UAAA,GAAA,EAAe;AAAE,eAAOC,MAAM,CAANA,wBAAAA,CAAAA,MAAAA,EAAAA,GAAAA,EAAP,UAAA;AAAtFD,OAAyB,CAAf,CAAVA;AAA4J;;AAACA,IAAAA,OAAO,CAAPA,OAAAA,CAAgB,UAAA,GAAA,EAAe;AAAEE,MAAAA,eAAe,CAAA,MAAA,EAAA,GAAA,EAAcH,MAAM,CAAnCG,GAAmC,CAApB,CAAfA;AAAjCF,KAAAA;AAAiF;;AAAC,SAAA,MAAA;AAAgB;;AAEje,SAAA,eAAA,CAAA,GAAA,EAAA,GAAA,EAAA,KAAA,EAA0C;AAAE,MAAIG,GAAG,IAAP,GAAA,EAAgB;AAAEF,IAAAA,MAAM,CAANA,cAAAA,CAAAA,GAAAA,EAAAA,GAAAA,EAAgC;AAAEG,MAAAA,KAAK,EAAP,KAAA;AAAgBC,MAAAA,UAAU,EAA1B,IAAA;AAAkCC,MAAAA,YAAY,EAA9C,IAAA;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhCN;AAAlB,GAAA,MAAkI;AAAEO,IAAAA,GAAG,CAAHA,GAAG,CAAHA,GAAAA,KAAAA;AAAmB;;AAAC,SAAA,GAAA;AAAa;;AAUjN,OAAA,aAAA,MAAA,kBAAA;AACA,OAAA,kBAAA,MAAA,4BAAA;AACA,SAAA,KAAA,QAAA,YAAA;;AAEA,IAAIC,uBAAuB,GAAGC,aAAa,CAAA,EAAA,EAAA,kBAAA,EAAyB;AAElEC,EAAAA,UAAU,EAFwD,aAAA;AAGlEC,EAAAA,MAAM,EAAEC,KAAK,CAAC,CAAA,MAAA,EAAA,UAAA,EAAA,YAAA,EAAD,MAAC,CAAD;AAHqD,CAAzB,CAA3C;;AAMA,eAAA,uBAAA","sourcesContent":["function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport ColorPropType from '../ColorPropType';\nimport TextStylePropTypes from '../Text/TextStylePropTypes';\nimport { oneOf } from 'prop-types';\n\nvar TextInputStylePropTypes = _objectSpread({}, TextStylePropTypes, {\n  /* @platform web */\n  caretColor: ColorPropType,\n  resize: oneOf(['none', 'vertical', 'horizontal', 'both'])\n});\n\nexport default TextInputStylePropTypes;"]},"metadata":{},"sourceType":"module"}