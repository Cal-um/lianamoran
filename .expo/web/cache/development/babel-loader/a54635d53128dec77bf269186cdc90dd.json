{"ast":null,"code":"var _jsxFileName = \"/Users/calumharris/code/liana-moran/src/layouts/index.tsx\";\nimport React, { useRef } from 'react';\nimport HeaderFooter from \"./HeaderFooter\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport useDimentions from '../utils/useDimentions';\nimport { TransitionState } from \"gatsby-plugin-transition-link\";\n\nvar Layout = function Layout(_ref) {\n  var children = _ref.children,\n      location = _ref.location;\n  var dimensions = useDimentions();\n  var opacity = useRef(new Animated.Value(0)).current;\n\n  var animateIn = function animateIn() {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: false\n    }).start();\n  };\n\n  var animateOut = function animateOut() {\n    Animated.timing(opacity, {\n      delay: 500,\n      toValue: 0,\n      duration: 500,\n      useNativeDriver: false\n    }).start();\n  };\n\n  return React.createElement(TransitionState, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, function (transition) {\n    transition.mount === true ? animateIn() : animateOut();\n    return React.createElement(Animated.View, {\n      style: {\n        opacity: opacity,\n        minHeight: dimensions.height,\n        minWidth: dimensions.width\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, React.createElement(HeaderFooter, {\n      compact: location.pathname === \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, children));\n  });\n};\n\nexport default Layout;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/src/layouts/index.tsx"],"names":["React","useRef","HeaderFooter","useDimentions","TransitionState","Layout","children","location","dimensions","opacity","Animated","Value","current","animateIn","timing","toValue","duration","useNativeDriver","start","animateOut","delay","transition","mount","minHeight","height","minWidth","width","pathname"],"mappings":";AAAA,OAAOA,KAAP,IAAoBC,MAApB,QAA6C,OAA7C;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAGA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,eAAT,QAAgC,+BAAhC;;AACA,IAAMC,MAAqB,GAAG,SAAxBA,MAAwB,OAA4B;AAAA,MAAzBC,QAAyB,QAAzBA,QAAyB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAExD,MAAMC,UAAU,GAAGL,aAAa,EAAhC;AACA,MAAMM,OAAO,GAAGR,MAAM,CAAC,IAAIS,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAA9C;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBH,IAAAA,QAAQ,CAACI,MAAT,CAAgBL,OAAhB,EAAyB;AACvBM,MAAAA,OAAO,EAAE,CADc;AAEvBC,MAAAA,QAAQ,EAAE,GAFa;AAGvBC,MAAAA,eAAe,EAAE;AAHM,KAAzB,EAIGC,KAJH;AAKD,GAND;;AAQA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvBT,IAAAA,QAAQ,CAACI,MAAT,CAAgBL,OAAhB,EAAyB;AACvBW,MAAAA,KAAK,EAAC,GADiB;AAEvBL,MAAAA,OAAO,EAAE,CAFc;AAGvBC,MAAAA,QAAQ,EAAE,GAHa;AAIvBC,MAAAA,eAAe,EAAE;AAJM,KAAzB,EAKGC,KALH;AAMD,GAPD;;AASA,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,UAACG,UAAD,EAAqB;AAElBA,IAAAA,UAAU,CAACC,KAAX,KAAqB,IAArB,GAA4BT,SAAS,EAArC,GAA0CM,UAAU,EAApD;AAEF,WACE,oBAAC,QAAD,CAAU,IAAV;AAAe,MAAA,KAAK,EAAE;AAAEV,QAAAA,OAAO,EAAPA,OAAF;AAAWc,QAAAA,SAAS,EAAEf,UAAU,CAACgB,MAAjC;AAAyCC,QAAAA,QAAQ,EAAEjB,UAAU,CAACkB;AAA9D,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAEnB,QAAQ,CAACoB,QAAT,KAAsB,GAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGrB,QADH,CADF,CADF;AAMD,GAXH,CADF;AAeD,CArCD;;AAuCA,eAAeD,MAAf","sourcesContent":["import React, { FC, useRef, useEffect } from 'react'\nimport HeaderFooter from \"./HeaderFooter\"\nimport { PageProps } from 'gatsby'\nimport { View, Animated } from 'react-native'\nimport useDimentions from '../utils/useDimentions'\nimport { TransitionState } from \"gatsby-plugin-transition-link\"\nconst Layout: FC<PageProps> = ({ children, location }) => {\n\n  const dimensions = useDimentions()\n  const opacity = useRef(new Animated.Value(0)).current\n\n  const animateIn = () => {\n    Animated.timing(opacity, {\n      toValue: 1,\n      duration: 500,\n      useNativeDriver: false\n    }).start()\n  }\n\n  const animateOut = () => {\n    Animated.timing(opacity, {\n      delay:500,\n      toValue: 0,\n      duration: 500,\n      useNativeDriver: false\n    }).start()\n  }\n\n  return (\n    <TransitionState>\n      {(transition: any) => {\n\n          transition.mount === true ? animateIn() : animateOut()\n\n        return (\n          <Animated.View style={{ opacity, minHeight: dimensions.height, minWidth: dimensions.width }}>\n            <HeaderFooter compact={location.pathname === \"/\"}>\n              {children}\n            </HeaderFooter>\n          </Animated.View>)\n      }}\n    </TransitionState>\n  )\n}\n\nexport default Layout\n"]},"metadata":{},"sourceType":"module"}