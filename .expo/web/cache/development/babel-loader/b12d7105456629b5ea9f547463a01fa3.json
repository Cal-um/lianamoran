{"ast":null,"code":"import EdgeInsetsPropType from '../EdgeInsetsPropType';\nimport StyleSheetPropType from '../../modules/StyleSheetPropType';\nimport ViewStylePropTypes from './ViewStylePropTypes';\nimport { any, array, arrayOf, bool, func, object, oneOf, oneOfType, string } from 'prop-types';\nvar stylePropType = StyleSheetPropType(ViewStylePropTypes);\nvar ViewPropTypes = {\n  accessibilityComponentType: string,\n  accessibilityLabel: string,\n  accessibilityLiveRegion: oneOf(['assertive', 'none', 'polite']),\n  accessibilityRole: string,\n  accessibilityStates: arrayOf(oneOf(['disabled', 'selected', 'busy', 'checked', 'expanded', 'grabbed', 'invalid', 'pressed'])),\n  accessibilityTraits: oneOfType([array, string]),\n  accessible: bool,\n  children: any,\n  hitSlop: EdgeInsetsPropType,\n  importantForAccessibility: oneOf(['auto', 'no', 'no-hide-descendants', 'yes']),\n  nativeID: string,\n  onBlur: func,\n  onClick: func,\n  onClickCapture: func,\n  onFocus: func,\n  onLayout: func,\n  onMoveShouldSetResponder: func,\n  onMoveShouldSetResponderCapture: func,\n  onResponderGrant: func,\n  onResponderMove: func,\n  onResponderReject: func,\n  onResponderRelease: func,\n  onResponderTerminate: func,\n  onResponderTerminationRequest: func,\n  onStartShouldSetResponder: func,\n  onStartShouldSetResponderCapture: func,\n  onTouchCancel: func,\n  onTouchCancelCapture: func,\n  onTouchEnd: func,\n  onTouchEndCapture: func,\n  onTouchMove: func,\n  onTouchMoveCapture: func,\n  onTouchStart: func,\n  onTouchStartCapture: func,\n  pointerEvents: oneOf(['auto', 'box-none', 'box-only', 'none']),\n  style: stylePropType,\n  testID: string,\n  onContextMenu: func,\n  itemID: string,\n  itemRef: string,\n  itemProp: string,\n  itemScope: string,\n  itemType: string,\n  accessibilityViewIsModal: bool,\n  collapsable: bool,\n  needsOffscreenAlphaCompositing: bool,\n  onAccessibilityTap: func,\n  onMagicTap: func,\n  removeClippedSubviews: bool,\n  renderToHardwareTextureAndroid: bool,\n  shouldRasterizeIOS: bool,\n  tvParallaxProperties: object\n};\nexport default ViewPropTypes;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/exports/View/ViewPropTypes.js"],"names":["stylePropType","StyleSheetPropType","ViewPropTypes","accessibilityComponentType","accessibilityLabel","accessibilityLiveRegion","oneOf","accessibilityRole","accessibilityStates","arrayOf","accessibilityTraits","oneOfType","accessible","children","hitSlop","importantForAccessibility","nativeID","onBlur","onClick","onClickCapture","onFocus","onLayout","onMoveShouldSetResponder","onMoveShouldSetResponderCapture","onResponderGrant","onResponderMove","onResponderReject","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onStartShouldSetResponder","onStartShouldSetResponderCapture","onTouchCancel","onTouchCancelCapture","onTouchEnd","onTouchEndCapture","onTouchMove","onTouchMoveCapture","onTouchStart","onTouchStartCapture","pointerEvents","style","testID","onContextMenu","itemID","itemRef","itemProp","itemScope","itemType","accessibilityViewIsModal","collapsable","needsOffscreenAlphaCompositing","onAccessibilityTap","onMagicTap","removeClippedSubviews","renderToHardwareTextureAndroid","shouldRasterizeIOS","tvParallaxProperties","object"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport EdgeInsetsPropType from '../EdgeInsetsPropType';\nimport StyleSheetPropType from '../../modules/StyleSheetPropType';\nimport ViewStylePropTypes from './ViewStylePropTypes';\nimport { any, array, arrayOf, bool, func, object, oneOf, oneOfType, string } from 'prop-types';\nvar stylePropType = StyleSheetPropType(ViewStylePropTypes);\nvar ViewPropTypes = {\n  accessibilityComponentType: string,\n  accessibilityLabel: string,\n  accessibilityLiveRegion: oneOf(['assertive', 'none', 'polite']),\n  accessibilityRole: string,\n  accessibilityStates: arrayOf(oneOf(['disabled', 'selected',\n  /* web-only */\n  'busy', 'checked', 'expanded', 'grabbed', 'invalid', 'pressed'])),\n  accessibilityTraits: oneOfType([array, string]),\n  accessible: bool,\n  children: any,\n  hitSlop: EdgeInsetsPropType,\n  importantForAccessibility: oneOf(['auto', 'no', 'no-hide-descendants', 'yes']),\n  nativeID: string,\n  onBlur: func,\n  onClick: func,\n  onClickCapture: func,\n  onFocus: func,\n  onLayout: func,\n  onMoveShouldSetResponder: func,\n  onMoveShouldSetResponderCapture: func,\n  onResponderGrant: func,\n  onResponderMove: func,\n  onResponderReject: func,\n  onResponderRelease: func,\n  onResponderTerminate: func,\n  onResponderTerminationRequest: func,\n  onStartShouldSetResponder: func,\n  onStartShouldSetResponderCapture: func,\n  onTouchCancel: func,\n  onTouchCancelCapture: func,\n  onTouchEnd: func,\n  onTouchEndCapture: func,\n  onTouchMove: func,\n  onTouchMoveCapture: func,\n  onTouchStart: func,\n  onTouchStartCapture: func,\n  pointerEvents: oneOf(['auto', 'box-none', 'box-only', 'none']),\n  style: stylePropType,\n  testID: string,\n  // web extensions\n  onContextMenu: func,\n  itemID: string,\n  itemRef: string,\n  itemProp: string,\n  itemScope: string,\n  itemType: string,\n  // compatibility with React Native\n  accessibilityViewIsModal: bool,\n  collapsable: bool,\n  needsOffscreenAlphaCompositing: bool,\n  onAccessibilityTap: func,\n  onMagicTap: func,\n  removeClippedSubviews: bool,\n  renderToHardwareTextureAndroid: bool,\n  shouldRasterizeIOS: bool,\n  tvParallaxProperties: object\n};\nexport default ViewPropTypes;"]},"metadata":{},"sourceType":"module"}