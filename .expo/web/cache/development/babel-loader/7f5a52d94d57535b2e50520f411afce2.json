{"ast":null,"code":"import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.for-each\";\nimport AccessibilityUtil from '../../modules/AccessibilityUtil';\nimport createDOMProps from '../../modules/createDOMProps';\nimport { injectEventPluginsByName } from 'react-dom/unstable-native-dependencies';\nimport normalizeNativeEvent from '../../modules/normalizeNativeEvent';\nimport React from 'react';\nimport ResponderEventPlugin from '../../modules/ResponderEventPlugin';\ninjectEventPluginsByName({\n  ResponderEventPlugin: ResponderEventPlugin\n});\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\nvar eventHandlerNames = {\n  onBlur: true,\n  onClick: true,\n  onClickCapture: true,\n  onContextMenu: true,\n  onFocus: true,\n  onResponderRelease: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true\n};\n\nvar adjustProps = function adjustProps(domProps) {\n  var onClick = domProps.onClick,\n      onResponderRelease = domProps.onResponderRelease,\n      role = domProps.role;\n  var isButtonLikeRole = AccessibilityUtil.buttonLikeRoles[role];\n  var isDisabled = AccessibilityUtil.isDisabled(domProps);\n  var isLinkRole = role === 'link';\n  Object.keys(domProps).forEach(function (propName) {\n    var prop = domProps[propName];\n    var isEventHandler = typeof prop === 'function' && eventHandlerNames[propName];\n\n    if (isEventHandler) {\n      if (isButtonLikeRole && isDisabled) {\n        domProps[propName] = undefined;\n      } else {\n        domProps[propName] = function (e) {\n          e.nativeEvent = normalizeNativeEvent(e.nativeEvent);\n          return prop(e);\n        };\n      }\n    }\n  });\n\n  if (isLinkRole && onResponderRelease) {\n    domProps.onClick = function (e) {\n      if (!e.isDefaultPrevented() && !isModifiedEvent(e.nativeEvent) && !domProps.target) {\n        e.preventDefault();\n      }\n    };\n  }\n\n  if (isButtonLikeRole && !isDisabled) {\n    domProps.onKeyPress = function (e) {\n      if (!e.isDefaultPrevented() && (e.which === 13 || e.which === 32)) {\n        e.preventDefault();\n\n        if (onClick) {\n          onClick(e);\n        }\n      }\n    };\n  }\n};\n\nvar createElement = function createElement(component, props) {\n  var accessibilityComponent;\n\n  if (component && component.constructor === String) {\n    accessibilityComponent = AccessibilityUtil.propsToAccessibilityComponent(props);\n  }\n\n  var Component = accessibilityComponent || component;\n  var domProps = createDOMProps(Component, props);\n  adjustProps(domProps);\n\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  return React.createElement.apply(React, [Component, domProps].concat(children));\n};\n\nexport default createElement;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/exports/createElement/index.js"],"names":["injectEventPluginsByName","ResponderEventPlugin","isModifiedEvent","event","eventHandlerNames","onBlur","onClick","onClickCapture","onContextMenu","onFocus","onResponderRelease","onTouchCancel","onTouchCancelCapture","onTouchEnd","onTouchEndCapture","onTouchMove","onTouchMoveCapture","onTouchStart","onTouchStartCapture","adjustProps","domProps","role","isButtonLikeRole","AccessibilityUtil","isDisabled","isLinkRole","Object","prop","isEventHandler","e","normalizeNativeEvent","createElement","component","accessibilityComponent","Component","createDOMProps","_len","arguments","children","_key","React"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nimport AccessibilityUtil from '../../modules/AccessibilityUtil';\nimport createDOMProps from '../../modules/createDOMProps';\nimport { injectEventPluginsByName } from 'react-dom/unstable-native-dependencies';\nimport normalizeNativeEvent from '../../modules/normalizeNativeEvent';\nimport React from 'react';\nimport ResponderEventPlugin from '../../modules/ResponderEventPlugin';\ninjectEventPluginsByName({\n  ResponderEventPlugin: ResponderEventPlugin\n});\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n/**\n * Ensure event handlers receive an event of the expected shape. The 'button'\n * role â€“ for accessibility reasons and functional equivalence to the native\n * button element â€“ must also support synthetic keyboard activation of onclick,\n * and remove event handlers when disabled.\n */\n\n\nvar eventHandlerNames = {\n  onBlur: true,\n  onClick: true,\n  onClickCapture: true,\n  onContextMenu: true,\n  onFocus: true,\n  onResponderRelease: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true\n};\n\nvar adjustProps = function adjustProps(domProps) {\n  var onClick = domProps.onClick,\n      onResponderRelease = domProps.onResponderRelease,\n      role = domProps.role;\n  var isButtonLikeRole = AccessibilityUtil.buttonLikeRoles[role];\n  var isDisabled = AccessibilityUtil.isDisabled(domProps);\n  var isLinkRole = role === 'link';\n  Object.keys(domProps).forEach(function (propName) {\n    var prop = domProps[propName];\n    var isEventHandler = typeof prop === 'function' && eventHandlerNames[propName];\n\n    if (isEventHandler) {\n      if (isButtonLikeRole && isDisabled) {\n        domProps[propName] = undefined;\n      } else {\n        // TODO: move this out of the render path\n        domProps[propName] = function (e) {\n          e.nativeEvent = normalizeNativeEvent(e.nativeEvent);\n          return prop(e);\n        };\n      }\n    }\n  }); // Cancel click events if the responder system is being used on a link\n  // element. Click events are not an expected part of the React Native API,\n  // and browsers dispatch click events that cannot otherwise be cancelled from\n  // preceding mouse events in the responder system.\n\n  if (isLinkRole && onResponderRelease) {\n    domProps.onClick = function (e) {\n      if (!e.isDefaultPrevented() && !isModifiedEvent(e.nativeEvent) && !domProps.target) {\n        e.preventDefault();\n      }\n    };\n  } // Button-like roles should trigger 'onClick' if SPACE or ENTER keys are pressed.\n\n\n  if (isButtonLikeRole && !isDisabled) {\n    domProps.onKeyPress = function (e) {\n      if (!e.isDefaultPrevented() && (e.which === 13 || e.which === 32)) {\n        e.preventDefault();\n\n        if (onClick) {\n          onClick(e);\n        }\n      }\n    };\n  }\n};\n\nvar createElement = function createElement(component, props) {\n  // use equivalent platform elements where possible\n  var accessibilityComponent;\n\n  if (component && component.constructor === String) {\n    accessibilityComponent = AccessibilityUtil.propsToAccessibilityComponent(props);\n  }\n\n  var Component = accessibilityComponent || component;\n  var domProps = createDOMProps(Component, props);\n  adjustProps(domProps);\n\n  for (var _len = arguments.length, children = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  return React.createElement.apply(React, [Component, domProps].concat(children));\n};\n\nexport default createElement;"]},"metadata":{},"sourceType":"module"}