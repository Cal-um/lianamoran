{"ast":null,"code":"var _jsxFileName = \"/Users/calumharris/code/liana-moran/src/pages/index.tsx\";\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { navigate } from \"gatsby\";\nimport Layout from \"../layouts\";\nexport default (function () {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: \"blue\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigate(\"page-2\");\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, \"derp\"))));\n});\nexport var pageQuery = \"3783718424\";","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/src/pages/index.tsx"],"names":["React","navigate","Layout","backgroundColor","pageQuery"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAeA,gBAAe,YAAM;AACjB,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,eAAe,EAAE;AAAnB,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMF,QAAQ,CAAC,QAAD,CAAd;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADF,CAFA,CADF;AAWH,CAZD;AAcA,OAAO,IAAMG,SAAS,eAAf","sourcesContent":["import React from 'react'\nimport { Text, View, TouchableOpacity } from \"react-native\"\nimport { navigate } from \"gatsby\"\nimport Layout from \"../layouts\"\n\n\n// Please note that you can use https://github.com/dotansimha/graphql-code-generator\n// to generate all types from graphQL schema\ninterface IndexPageProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n      }\n    }\n  }\n}\n\nexport default () => {\n    return (\n      <Layout>\n\n      <View style={{ backgroundColor: \"blue\"}}>\n        <TouchableOpacity onPress={() => navigate(\"page-2\")}>\n        <Text>derp</Text>\n        </TouchableOpacity>\n      </View>\n      </Layout>\n    )\n  \n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"]},"metadata":{},"sourceType":"module"}