{"ast":null,"code":"import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.for-each\";\nvar unitlessNumbers = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridColumn: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  shadowOpacity: true\n};\nvar prefixes = ['ms', 'Moz', 'O', 'Webkit'];\n\nvar prefixKey = function prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\n\nObject.keys(unitlessNumbers).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\nexport default unitlessNumbers;","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/node_modules/react-native-web/dist/modules/unitlessNumbers/index.js"],"names":["unitlessNumbers","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexOrder","flexPositive","flexShrink","flexNegative","fontWeight","gridRow","gridColumn","lineClamp","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","scale","scaleX","scaleY","scaleZ","shadowOpacity","prefixes","prefixKey","prefix","key","Object"],"mappings":";;;;;AASA,IAAIA,eAAe,GAAG;AACpBC,EAAAA,uBAAuB,EADH,IAAA;AAEpBC,EAAAA,iBAAiB,EAFG,IAAA;AAGpBC,EAAAA,gBAAgB,EAHI,IAAA;AAIpBC,EAAAA,gBAAgB,EAJI,IAAA;AAKpBC,EAAAA,OAAO,EALa,IAAA;AAMpBC,EAAAA,YAAY,EANQ,IAAA;AAOpBC,EAAAA,eAAe,EAPK,IAAA;AAQpBC,EAAAA,WAAW,EARS,IAAA;AASpBC,EAAAA,IAAI,EATgB,IAAA;AAUpBC,EAAAA,QAAQ,EAVY,IAAA;AAWpBC,EAAAA,SAAS,EAXW,IAAA;AAYpBC,EAAAA,YAAY,EAZQ,IAAA;AAapBC,EAAAA,UAAU,EAbU,IAAA;AAcpBC,EAAAA,YAAY,EAdQ,IAAA;AAepBC,EAAAA,UAAU,EAfU,IAAA;AAgBpBC,EAAAA,OAAO,EAhBa,IAAA;AAiBpBC,EAAAA,UAAU,EAjBU,IAAA;AAkBpBC,EAAAA,SAAS,EAlBW,IAAA;AAmBpBC,EAAAA,OAAO,EAnBa,IAAA;AAoBpBC,EAAAA,KAAK,EApBe,IAAA;AAqBpBC,EAAAA,OAAO,EArBa,IAAA;AAsBpBC,EAAAA,OAAO,EAtBa,IAAA;AAuBpBC,EAAAA,MAAM,EAvBc,IAAA;AAwBpBC,EAAAA,MAAM,EAxBc,IAAA;AAyBpBC,EAAAA,IAAI,EAzBgB,IAAA;AA2BpBC,EAAAA,WAAW,EA3BS,IAAA;AA4BpBC,EAAAA,YAAY,EA5BQ,IAAA;AA6BpBC,EAAAA,WAAW,EA7BS,IAAA;AA8BpBC,EAAAA,eAAe,EA9BK,IAAA;AA+BpBC,EAAAA,gBAAgB,EA/BI,IAAA;AAgCpBC,EAAAA,gBAAgB,EAhCI,IAAA;AAiCpBC,EAAAA,aAAa,EAjCO,IAAA;AAkCpBC,EAAAA,WAAW,EAlCS,IAAA;AAoCpBC,EAAAA,KAAK,EApCe,IAAA;AAqCpBC,EAAAA,MAAM,EArCc,IAAA;AAsCpBC,EAAAA,MAAM,EAtCc,IAAA;AAuCpBC,EAAAA,MAAM,EAvCc,IAAA;AAyCpBC,EAAAA,aAAa,EAAE;AAzCK,CAAtB;AAgDA,IAAIC,QAAQ,GAAG,CAAA,IAAA,EAAA,KAAA,EAAA,GAAA,EAAf,QAAe,CAAf;;AAEA,IAAIC,SAAS,GAAG,SAAA,SAAA,CAAA,MAAA,EAAA,GAAA,EAAgC;AAC9C,SAAOC,MAAM,GAAGC,GAAG,CAAHA,MAAAA,CAAAA,CAAAA,EAATD,WAASC,EAATD,GAAuCC,GAAG,CAAHA,SAAAA,CAA9C,CAA8CA,CAA9C;AADF,CAAA;;AAIAC,MAAM,CAANA,IAAAA,CAAAA,eAAAA,EAAAA,OAAAA,CAAqC,UAAA,IAAA,EAAgB;AACnDJ,EAAAA,QAAQ,CAARA,OAAAA,CAAiB,UAAA,MAAA,EAAkB;AACjCvC,IAAAA,eAAe,CAACwC,SAAS,CAAA,MAAA,EAAzBxC,IAAyB,CAAV,CAAfA,GAA2CA,eAAe,CAA1DA,IAA0D,CAA1DA;AADFuC,GAAAA;AADFI,CAAAA;AAKA,eAAA,eAAA","sourcesContent":["/**\n * Copyright (c) Nicolas Gallagher.\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\nvar unitlessNumbers = {\n  animationIterationCount: true,\n  borderImageOutset: true,\n  borderImageSlice: true,\n  borderImageWidth: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexOrder: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  fontWeight: true,\n  gridRow: true,\n  gridColumn: true,\n  lineClamp: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n  // SVG-related\n  fillOpacity: true,\n  floodOpacity: true,\n  stopOpacity: true,\n  strokeDasharray: true,\n  strokeDashoffset: true,\n  strokeMiterlimit: true,\n  strokeOpacity: true,\n  strokeWidth: true,\n  // transform types\n  scale: true,\n  scaleX: true,\n  scaleY: true,\n  scaleZ: true,\n  // RN properties\n  shadowOpacity: true\n};\n/**\n * Support style names that may come passed in prefixed by adding permutations\n * of vendor prefixes.\n */\n\nvar prefixes = ['ms', 'Moz', 'O', 'Webkit'];\n\nvar prefixKey = function prefixKey(prefix, key) {\n  return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n};\n\nObject.keys(unitlessNumbers).forEach(function (prop) {\n  prefixes.forEach(function (prefix) {\n    unitlessNumbers[prefixKey(prefix, prop)] = unitlessNumbers[prop];\n  });\n});\nexport default unitlessNumbers;"]},"metadata":{},"sourceType":"module"}