{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useEffect,useState}from\"react\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";export default(function(){var _useState=useState({height:Dimensions.get(\"window\").height,width:Dimensions.get(\"window\").width}),_useState2=_slicedToArray(_useState,2),dimentions=_useState2[0],setDimentions=_useState2[1];console.log({dimentions:dimentions});useEffect(function(){Dimensions.addEventListener(\"change\",function(e){return setDimentions({height:e.window.height,width:e.window.width});});return function(){return Dimensions.removeEventListener(\"change\",function(e){return setDimentions({height:e.window.height,width:e.window.width});});};},[]);return dimentions;});","map":{"version":3,"sources":["/Users/calumharris/code/liana-moran/src/utils/useDimentions.tsx"],"names":["useEffect","useState","height","Dimensions","get","width","dimentions","setDimentions","console","log","addEventListener","e","window","removeEventListener"],"mappings":"iEAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,C,iEAGA,eAAe,UAAM,eACmBA,QAAQ,CAAC,CAACC,MAAM,CAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,MAAlC,CAA0CG,KAAK,CAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA1E,CAAD,CAD3B,wCACVC,UADU,eACEC,aADF,eAEjBC,OAAO,CAACC,GAAR,CAAY,CAACH,UAAU,CAAVA,UAAD,CAAZ,EACAN,SAAS,CAAC,UAAM,CACZG,UAAU,CAACO,gBAAX,CAA4B,QAA5B,CAAsC,SAACC,CAAD,QAAOJ,CAAAA,aAAa,CAAC,CAACL,MAAM,CAACS,CAAC,CAACC,MAAF,CAASV,MAAjB,CAAyBG,KAAK,CAACM,CAAC,CAACC,MAAF,CAASP,KAAxC,CAAD,CAApB,EAAtC,EACA,MAAO,kBAAMF,CAAAA,UAAU,CAACU,mBAAX,CAA+B,QAA/B,CAAyC,SAACF,CAAD,QAAOJ,CAAAA,aAAa,CAAC,CAACL,MAAM,CAACS,CAAC,CAACC,MAAF,CAASV,MAAjB,CAAyBG,KAAK,CAACM,CAAC,CAACC,MAAF,CAASP,KAAxC,CAAD,CAApB,EAAzC,CAAN,EAAP,CACD,CAHM,CAGJ,EAHI,CAAT,CAIA,MAAOC,CAAAA,UAAP,CACH,CARD","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { Dimensions }from \"react-native\"\n\nexport default () => {\n    const [dimentions, setDimentions] = useState({height: Dimensions.get(\"window\").height, width: Dimensions.get(\"window\").width})\n    console.log({dimentions})\n    useEffect(() => {\n        Dimensions.addEventListener(\"change\", (e) => setDimentions({height:e.window.height, width:e.window.width}))\n        return () => Dimensions.removeEventListener(\"change\", (e) => setDimentions({height:e.window.height, width:e.window.width}))\n      }, [])\n    return dimentions\n}\n\n"]},"metadata":{},"sourceType":"module"}